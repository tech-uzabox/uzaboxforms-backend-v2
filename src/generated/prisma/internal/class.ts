
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from "@prisma/client/runtime/client"
import type * as Prisma from "./prismaNamespace.js"


const config: runtime.GetPrismaClientConfig = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client"
    },
    "output": {
      "value": "/Users/peaceishimwe/Desktop/Projecte/Uzabox/forms-v2/uzaboxforms-server-v2/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client",
      "moduleFormat": "cjs"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "fullTextSearchPostgres",
      "relationJoins"
    ],
    "sourceFilePath": "/Users/peaceishimwe/Desktop/Projecte/Uzabox/forms-v2/uzaboxforms-server-v2/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"relationJoins\", \"fullTextSearchPostgres\"]\n  moduleFormat    = \"cjs\"\n  engineType      = \"client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                     String                   @id @default(uuid()) @db.Uuid\n  email                  String                   @unique @db.VarChar(255)\n  password               String                   @db.VarChar(255)\n  firstName              String?\n  lastName               String?\n  photo                  String?\n  googleId               String?                  @unique\n  status                 UserStatus               @default(ENABLED)\n  failedLoginAttempts    Int                      @default(0)\n  lockedUntil            DateTime?\n  isLocked               Boolean                  @default(false)\n  createdAt              DateTime                 @default(now())\n  updatedAt              DateTime                 @updatedAt\n  applicantProcesses     ApplicantProcess[]\n  auditLogs              AuditLog[]\n  files                  File[]\n  createdForms           Form[]                   @relation(\"FormCreator\")\n  createdFolders         Folder[]                 @relation(\"FolderCreator\")\n  createdProcessFolders  ProcessFolder[]          @relation(\"ProcessFolderCreator\")\n  createdGroups          Group[]                  @relation(\"GroupCreator\")\n  organization           OrganizationUser?\n  createdProcesses       Process[]                @relation(\"ProcessCreator\")\n  processedApplications  ProcessedApplication[]\n  qrCodeDocuments        QrCodeDocument[]\n  roles                  UserRole[]\n  ownedDashboards        Dashboard[]\n  formGenerationProgress FormGenerationProgress[]\n\n  @@index([email])\n  @@map(\"users\")\n}\n\nmodel Role {\n  id          String        @id @default(uuid()) @db.Uuid\n  name        String        @unique\n  description String?\n  status      RoleStatus    @default(ENABLED)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  groups      GroupRole[]\n  processes   ProcessRole[]\n  users       UserRole[]\n\n  @@map(\"roles\")\n}\n\nmodel UserRole {\n  userId String     @db.Uuid\n  roleId String     @db.Uuid\n  status RoleStatus @default(ENABLED)\n  role   Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([userId, roleId])\n  @@map(\"user_roles\")\n}\n\nmodel File {\n  id           String   @id @default(uuid()) @db.Uuid\n  fileUrl      String   @db.VarChar(255)\n  thumbnailUrl String?\n  size         Int\n  isPrivate    Boolean  @default(false)\n  title        String   @db.VarChar(255)\n  userId       String   @db.Uuid\n  fileType     String   @db.VarChar(255)\n  createdAt    DateTime @default(now()) @db.Timestamp(0)\n  updatedAt    DateTime @updatedAt @db.Timestamp(0)\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@map(\"files\")\n}\n\nmodel AuditLog {\n  id           String   @id @default(uuid()) @db.Uuid\n  timestamp    DateTime @default(now())\n  userId       String?  @db.Uuid\n  action       String\n  resource     String?\n  resourceId   String?\n  details      Json?\n  status       String\n  errorMessage String?\n  user         User?    @relation(fields: [userId], references: [id])\n\n  @@index([userId, action, resource])\n  @@map(\"audit_logs\")\n}\n\nmodel Group {\n  id        String      @id @default(uuid()) @db.Uuid\n  name      String      @unique\n  status    GroupStatus @default(ENABLED)\n  creatorId String      @db.Uuid\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n  roles     GroupRole[]\n  creator   User        @relation(\"GroupCreator\", fields: [creatorId], references: [id])\n  processes Process[]\n\n  @@map(\"groups\")\n}\n\nmodel GroupRole {\n  groupId String     @db.Uuid\n  roleId  String     @db.Uuid\n  status  RoleStatus @default(ENABLED)\n  group   Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  role    Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([groupId, roleId])\n  @@map(\"group_roles\")\n}\n\nmodel Process {\n  id                        String                 @id @default(uuid()) @db.Uuid\n  name                      String\n  type                      ProcessType            @default(PRIVATE)\n  groupId                   String                 @db.Uuid\n  creatorId                 String                 @db.Uuid\n  processFolderId           String?                @db.Uuid\n  status                    ProcessStatus          @default(ENABLED)\n  archived                  Boolean                @default(false)\n  staffViewForms            Boolean                @default(false)\n  applicantViewProcessLevel Boolean                @default(false)\n  createdAt                 DateTime               @default(now())\n  updatedAt                 DateTime               @updatedAt\n  applicantProcesses        ApplicantProcess[]\n  formResponses             FormResponse[]\n  forms                     ProcessForm[]\n  processedApplications     ProcessedApplication[]\n  roles                     ProcessRole[]\n  creator                   User                   @relation(\"ProcessCreator\", fields: [creatorId], references: [id])\n  group                     Group                  @relation(fields: [groupId], references: [id])\n  processFolder             ProcessFolder?         @relation(fields: [processFolderId], references: [id], onDelete: SetNull)\n\n  @@index([groupId])\n  @@index([creatorId])\n  @@index([processFolderId])\n  @@map(\"processes\")\n}\n\nmodel ProcessRole {\n  processId String     @db.Uuid\n  roleId    String     @db.Uuid\n  status    RoleStatus @default(ENABLED)\n  process   Process    @relation(fields: [processId], references: [id], onDelete: Cascade)\n  role      Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([processId, roleId])\n  @@map(\"process_roles\")\n}\n\nmodel Folder {\n  id          String   @id @default(uuid()) @db.Uuid\n  name        String\n  description String?\n  creatorId   String   @db.Uuid\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  creator     User     @relation(\"FolderCreator\", fields: [creatorId], references: [id])\n  forms       Form[]\n\n  @@index([creatorId])\n  @@map(\"folders\")\n}\n\nmodel ProcessFolder {\n  id          String    @id @default(uuid()) @db.Uuid\n  name        String\n  description String?\n  creatorId   String    @db.Uuid\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  creator     User      @relation(\"ProcessFolderCreator\", fields: [creatorId], references: [id])\n  processes   Process[]\n\n  @@index([creatorId])\n  @@map(\"process_folders\")\n}\n\nmodel Form {\n  id                     String                   @id @default(uuid()) @db.Uuid\n  name                   String\n  type                   FormType                 @default(INTERNAL)\n  status                 FormStatus               @default(ENABLED)\n  archived               Boolean                  @default(false)\n  creatorId              String                   @db.Uuid\n  folderId               String?                  @db.Uuid\n  createdAt              DateTime                 @default(now())\n  updatedAt              DateTime                 @updatedAt\n  design                 Json?\n  responses              FormResponse[]\n  creator                User                     @relation(\"FormCreator\", fields: [creatorId], references: [id])\n  folder                 Folder?                  @relation(fields: [folderId], references: [id], onDelete: SetNull)\n  processForms           ProcessForm[]\n  formGenerationProgress FormGenerationProgress[]\n\n  @@index([creatorId])\n  @@index([folderId])\n  @@map(\"forms\")\n}\n\nmodel FormResponse {\n  id                 String           @id @default(uuid()) @db.Uuid\n  formId             String           @db.Uuid\n  applicantProcessId String           @db.Uuid\n  responses          Json\n  createdAt          DateTime         @default(now())\n  processId          String           @db.Uuid\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n  form               Form             @relation(fields: [formId], references: [id], onDelete: Cascade)\n  process            Process          @relation(fields: [processId], references: [id], onDelete: Cascade)\n\n  @@unique([formId, applicantProcessId])\n  @@index([formId])\n  @@index([processId])\n  @@index([applicantProcessId])\n  @@map(\"form_responses\")\n}\n\nmodel ProcessForm {\n  id                               String       @id @default(uuid()) @db.Uuid\n  processId                        String       @db.Uuid\n  formId                           String       @db.Uuid\n  order                            Int\n  nextStepType                     NextStepType @default(NOT_APPLICABLE)\n  nextStepRoles                    String[]\n  nextStaffId                      String?      @db.Uuid\n  nextStepSpecifiedTo              String?\n  notificationType                 NextStepType @default(NOT_APPLICABLE)\n  notificationRoles                String[]\n  notificationToId                 String?      @db.Uuid\n  notificationComment              String?\n  notifyApplicant                  Boolean      @default(false)\n  applicantNotificationContent     String?\n  editApplicationStatus            Boolean      @default(false)\n  applicantViewFormAfterCompletion Boolean      @default(false)\n  createdAt                        DateTime     @default(now())\n  updatedAt                        DateTime     @updatedAt\n  form                             Form         @relation(fields: [formId], references: [id], onDelete: Cascade)\n  process                          Process      @relation(fields: [processId], references: [id], onDelete: Cascade)\n\n  @@index([processId, formId])\n  @@map(\"process_forms\")\n}\n\nmodel ApplicantProcess {\n  id                    String                 @id @default(uuid()) @db.Uuid\n  applicantId           String                 @db.Uuid\n  processId             String                 @db.Uuid\n  status                ProcessStatus          @default(ENABLED)\n  createdAt             DateTime               @default(now())\n  completedForms        APCompletedForm[]\n  applicant             User                   @relation(fields: [applicantId], references: [id])\n  process               Process                @relation(fields: [processId], references: [id])\n  processedApplications ProcessedApplication[]\n  responses             FormResponse[]\n  comments              ProcessComment[]\n\n  @@index([applicantId])\n  @@index([processId])\n  @@map(\"applicant_processes\")\n}\n\nmodel ProcessedApplication {\n  id                 String           @id @default(uuid()) @db.Uuid\n  userId             String           @db.Uuid\n  processId          String           @db.Uuid\n  applicantProcessId String           @db.Uuid\n  formId             String           @db.Uuid\n  formRoleIds        String[]\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  user               User             @relation(fields: [userId], references: [id])\n  process            Process          @relation(fields: [processId], references: [id])\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id])\n\n  @@index([userId])\n  @@index([processId])\n  @@index([applicantProcessId])\n  @@map(\"processed_applications\")\n}\n\nmodel APCompletedForm {\n  id                               String           @id @default(uuid()) @db.Uuid\n  applicantProcessId               String           @db.Uuid\n  formId                           String           @db.Uuid\n  reviewerId                       String?          @db.Uuid\n  nextStaffId                      String?          @db.Uuid\n  nextStepType                     NextStepType     @default(NOT_APPLICABLE)\n  nextStepRoles                    String[]\n  nextStepSpecifiedTo              String?\n  notificationType                 NextStepType     @default(NOT_APPLICABLE)\n  notificationToId                 String?          @db.Uuid\n  notificationToRoles              String[]\n  notificationComment              String?\n  notifyApplicant                  Boolean          @default(false)\n  applicantNotificationContent     String?\n  editApplicationStatus            Boolean          @default(false)\n  applicantViewFormAfterCompletion Boolean          @default(false)\n  createdAt                        DateTime         @default(now())\n  applicantProcess                 ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n\n  @@index([applicantProcessId])\n  @@map(\"ap_completed_forms\")\n}\n\nmodel ProcessComment {\n  id                 String           @id @default(uuid()) @db.Uuid\n  applicantProcessId String           @db.Uuid\n  userId             String           @db.Uuid\n  comment            String\n  createdAt          DateTime         @default(now())\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n\n  @@index([applicantProcessId])\n  @@index([userId])\n  @@map(\"process_comments\")\n}\n\nmodel OrganizationUser {\n  id           String             @id @default(uuid()) @db.Uuid\n  userId       String             @unique @db.Uuid\n  superiorId   String?            @db.Uuid\n  title        String\n  superior     OrganizationUser?  @relation(\"Hierarchy\", fields: [superiorId], references: [id])\n  subordinates OrganizationUser[] @relation(\"Hierarchy\")\n  user         User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"organization_users\")\n}\n\nmodel Dashboard {\n  id           String   @id @default(uuid()) @db.Uuid\n  name         String\n  ownerId      String   @db.Uuid\n  allowedUsers String[]\n  allowedRoles String[]\n  layout       Json?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  owner        User     @relation(fields: [ownerId], references: [id])\n  widgets      Widget[]\n\n  @@index([ownerId])\n  @@map(\"dashboards\")\n}\n\nmodel Widget {\n  id                String    @id @default(uuid()) @db.Uuid\n  dashboardId       String    @db.Uuid\n  description       String?\n  title             String\n  visualizationType String\n  config            Json\n  order             Int\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n  dashboard         Dashboard @relation(fields: [dashboardId], references: [id], onDelete: Cascade)\n\n  @@index([dashboardId])\n  @@map(\"widgets\")\n}\n\nmodel WidgetSandbox {\n  id                String   @id @default(uuid()) @db.Uuid\n  chatId            String   @db.Uuid\n  description       String?\n  title             String\n  visualizationType String\n  config            Json\n  order             Int\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  chat              Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)\n  isCommited        Boolean  @default(false)\n\n  @@index([chatId])\n  @@map(\"widget_sandboxes\")\n}\n\nmodel QrCodeDocument {\n  id           String   @id @default(uuid()) @db.Uuid\n  documentName String\n  fileName     String\n  qrCodeId     String   @unique\n  creatorId    String   @db.Uuid\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  creator      User     @relation(fields: [creatorId], references: [id])\n\n  @@index([creatorId])\n  @@map(\"qr_code_documents\")\n}\n\nmodel Otp {\n  id        String   @id @default(uuid()) @db.Uuid\n  email     String\n  otp       String\n  expiresAt DateTime\n\n  @@index([email])\n  @@map(\"otps\")\n}\n\nmodel Management {\n  id         String         @id @default(uuid()) @db.Uuid\n  fileName   String\n  fileUrl    String?\n  type       ManagementType\n  uploadedAt DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n\n  @@map(\"management\")\n}\n\nmodel AddToDatabase {\n  id        String              @id @default(uuid()) @db.Uuid\n  name      String\n  status    AddToDatabaseStatus @default(ENABLED)\n  parentId  String?             @db.Uuid\n  parent    AddToDatabase?      @relation(\"Hierarchy\", fields: [parentId], references: [id])\n  children  AddToDatabase[]     @relation(\"Hierarchy\")\n  createdAt DateTime            @default(now())\n  updatedAt DateTime            @updatedAt\n\n  // This will hold the tree data for this group (new relationship)\n  treeItems AddToDatabaseTreeItem[]\n\n  @@map(\"add_to_databases\")\n}\n\nmodel AddToDatabaseTreeItem {\n  id              String              @id @default(uuid()) @db.Uuid\n  name            String\n  status          AddToDatabaseStatus @default(ENABLED)\n  parentId        String?             @db.Uuid\n  addToDatabaseId String              @db.Uuid\n\n  // Tree relationships\n  parent   AddToDatabaseTreeItem?  @relation(\"TreeHierarchy\", fields: [parentId], references: [id])\n  children AddToDatabaseTreeItem[] @relation(\"TreeHierarchy\")\n\n  // Belongs to an AddToDatabase group\n  addToDatabase AddToDatabase @relation(fields: [addToDatabaseId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"add_to_database_tree_items\")\n}\n\nenum UserStatus {\n  ENABLED\n  DISABLED\n  PENDING\n}\n\nenum RoleStatus {\n  ENABLED\n  DISABLED\n}\n\nenum GroupStatus {\n  ENABLED\n  DISABLED\n}\n\nenum ProcessType {\n  PUBLIC\n  PRIVATE\n}\n\nenum ProcessStatus {\n  ENABLED\n  DISABLED\n}\n\nenum FormType {\n  PUBLIC\n  INTERNAL\n}\n\nenum FormStatus {\n  ENABLED\n  DISABLED\n}\n\nenum NextStepType {\n  STATIC\n  DYNAMIC\n  FOLLOW_ORGANIZATION_CHART\n  NOT_APPLICABLE\n}\n\nenum ManagementType {\n  HEADER\n  FOOTER\n}\n\nenum AddToDatabaseStatus {\n  ENABLED\n  DISABLED\n}\n\nenum FormGenerationStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n}\n\nenum ChatAIType {\n  DASHBOARD\n  FORM\n}\n\nmodel Chat {\n  id              String          @id @default(uuid()) @db.Uuid\n  createdAt       DateTime        @default(now())\n  title           String\n  userId          String          @db.Uuid\n  visibility      String          @default(\"private\")\n  type            ChatAIType      @default(FORM)\n  messages        Message[]\n  widgetSandboxes WidgetSandbox[]\n\n  @@map(\"chats\")\n}\n\nmodel Message {\n  id          String   @id @default(uuid()) @db.Uuid\n  chatId      String   @db.Uuid\n  role        String\n  parts       Json\n  attachments Json\n  createdAt   DateTime @default(now())\n  chat        Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)\n  votes       Vote[]\n\n  @@index([chatId])\n  @@map(\"messages\")\n}\n\nmodel Vote {\n  chatId    String  @db.Uuid\n  messageId String  @db.Uuid\n  isUpvoted Boolean\n  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)\n\n  @@id([chatId, messageId])\n  @@map(\"votes\")\n}\n\nmodel Document {\n  id          String       @id @default(uuid()) @db.Uuid\n  createdAt   DateTime     @default(now())\n  title       String\n  content     String?\n  kind        String       @default(\"text\")\n  userId      String       @db.Uuid\n  suggestions Suggestion[]\n\n  @@unique([id, createdAt])\n  @@index([userId])\n  @@map(\"documents\")\n}\n\nmodel Suggestion {\n  id                String   @id @default(uuid()) @db.Uuid\n  documentId        String   @db.Uuid\n  documentCreatedAt DateTime\n  originalText      String\n  suggestedText     String\n  description       String?\n  isResolved        Boolean  @default(false)\n  userId            String   @db.Uuid\n  createdAt         DateTime @default(now())\n  document          Document @relation(fields: [documentId, documentCreatedAt], references: [id, createdAt], onDelete: Cascade)\n\n  @@index([documentId, documentCreatedAt])\n  @@map(\"suggestions\")\n}\n\nmodel ProcessSave {\n  id          String   @id @default(uuid()) @db.Uuid\n  chatId      String   @unique @db.Uuid\n  rolesData   Json?\n  processData Json?\n  stepsData   Json?\n  formsData   Json?\n  isComplete  Boolean  @default(false)\n  createdAt   DateTime @default(now())\n\n  @@map(\"process_saves\")\n}\n\nmodel FormGenerationProgress {\n  id        String               @id @default(uuid()) @db.Uuid\n  jobId     String               @unique\n  status    FormGenerationStatus @default(PENDING)\n  progress  Int                  @default(0)\n  message   String?\n  userId    String               @db.Uuid\n  formId    String?              @db.Uuid\n  createdAt DateTime             @default(now())\n  updatedAt DateTime             @updatedAt\n  user      User                 @relation(fields: [userId], references: [id])\n  form      Form?                @relation(fields: [formId], references: [id])\n\n  @@index([userId])\n  @@index([formId])\n  @@map(\"form_generation_progress\")\n}\n",
  "inlineSchemaHash": "9ff5e37fb807f6f0184a051fc1daa771a9af162a164e9bef0a52d13fe63e0f91",
  "copyEngine": true,
  "runtimeDataModel": {
    "models": {},
    "enums": {},
    "types": {}
  },
  "dirname": ""
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isLocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcesses\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToUser\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToUser\"},{\"name\":\"createdForms\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormCreator\"},{\"name\":\"createdFolders\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FolderCreator\"},{\"name\":\"createdProcessFolders\",\"kind\":\"object\",\"type\":\"ProcessFolder\",\"relationName\":\"ProcessFolderCreator\"},{\"name\":\"createdGroups\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupCreator\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"OrganizationUserToUser\"},{\"name\":\"createdProcesses\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessCreator\"},{\"name\":\"processedApplications\",\"kind\":\"object\",\"type\":\"ProcessedApplication\",\"relationName\":\"ProcessedApplicationToUser\"},{\"name\":\"qrCodeDocuments\",\"kind\":\"object\",\"type\":\"QrCodeDocument\",\"relationName\":\"QrCodeDocumentToUser\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"ownedDashboards\",\"kind\":\"object\",\"type\":\"Dashboard\",\"relationName\":\"DashboardToUser\"},{\"name\":\"formGenerationProgress\",\"kind\":\"object\",\"type\":\"FormGenerationProgress\",\"relationName\":\"FormGenerationProgressToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groups\",\"kind\":\"object\",\"type\":\"GroupRole\",\"relationName\":\"GroupRoleToRole\"},{\"name\":\"processes\",\"kind\":\"object\",\"type\":\"ProcessRole\",\"relationName\":\"ProcessRoleToRole\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"roles\"},\"UserRole\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"}],\"dbName\":\"user_roles\"},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileToUser\"}],\"dbName\":\"files\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"Group\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"GroupStatus\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"GroupRole\",\"relationName\":\"GroupToGroupRole\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupCreator\"},{\"name\":\"processes\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"GroupToProcess\"}],\"dbName\":\"groups\"},\"GroupRole\":{\"fields\":[{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToGroupRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"GroupRoleToRole\"}],\"dbName\":\"group_roles\"},\"Process\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ProcessType\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processFolderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProcessStatus\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"staffViewForms\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantViewProcessLevel\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcesses\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToProcess\"},{\"name\":\"formResponses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"FormResponseToProcess\"},{\"name\":\"forms\",\"kind\":\"object\",\"type\":\"ProcessForm\",\"relationName\":\"ProcessToProcessForm\"},{\"name\":\"processedApplications\",\"kind\":\"object\",\"type\":\"ProcessedApplication\",\"relationName\":\"ProcessToProcessedApplication\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"ProcessRole\",\"relationName\":\"ProcessToProcessRole\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProcessCreator\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToProcess\"},{\"name\":\"processFolder\",\"kind\":\"object\",\"type\":\"ProcessFolder\",\"relationName\":\"ProcessToProcessFolder\"}],\"dbName\":\"processes\"},\"ProcessRole\":{\"fields\":[{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"ProcessRoleToRole\"}],\"dbName\":\"process_roles\"},\"Folder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FolderCreator\"},{\"name\":\"forms\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FolderToForm\"}],\"dbName\":\"folders\"},\"ProcessFolder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProcessFolderCreator\"},{\"name\":\"processes\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessFolder\"}],\"dbName\":\"process_folders\"},\"Form\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"FormType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormStatus\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"folderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"design\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"FormToFormResponse\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FormCreator\"},{\"name\":\"folder\",\"kind\":\"object\",\"type\":\"Folder\",\"relationName\":\"FolderToForm\"},{\"name\":\"processForms\",\"kind\":\"object\",\"type\":\"ProcessForm\",\"relationName\":\"FormToProcessForm\"},{\"name\":\"formGenerationProgress\",\"kind\":\"object\",\"type\":\"FormGenerationProgress\",\"relationName\":\"FormToFormGenerationProgress\"}],\"dbName\":\"forms\"},\"FormResponse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responses\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToFormResponse\"},{\"name\":\"form\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormToFormResponse\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"FormResponseToProcess\"}],\"dbName\":\"form_responses\"},\"ProcessForm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nextStepType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"nextStepRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStaffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStepSpecifiedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"notificationRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationComment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifyApplicant\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantNotificationContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"editApplicationStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantViewFormAfterCompletion\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"form\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormToProcessForm\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessForm\"}],\"dbName\":\"process_forms\"},\"ApplicantProcess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProcessStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedForms\",\"kind\":\"object\",\"type\":\"APCompletedForm\",\"relationName\":\"APCompletedFormToApplicantProcess\"},{\"name\":\"applicant\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApplicantProcessToUser\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ApplicantProcessToProcess\"},{\"name\":\"processedApplications\",\"kind\":\"object\",\"type\":\"ProcessedApplication\",\"relationName\":\"ApplicantProcessToProcessedApplication\"},{\"name\":\"responses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"ApplicantProcessToFormResponse\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProcessComment\",\"relationName\":\"ApplicantProcessToProcessComment\"}],\"dbName\":\"applicant_processes\"},\"ProcessedApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formRoleIds\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProcessedApplicationToUser\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessedApplication\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToProcessedApplication\"}],\"dbName\":\"processed_applications\"},\"APCompletedForm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStaffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStepType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"nextStepRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStepSpecifiedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"notificationToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationToRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationComment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifyApplicant\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantNotificationContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"editApplicationStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantViewFormAfterCompletion\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"APCompletedFormToApplicantProcess\"}],\"dbName\":\"ap_completed_forms\"},\"ProcessComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToProcessComment\"}],\"dbName\":\"process_comments\"},\"OrganizationUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"superiorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"superior\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"Hierarchy\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"Hierarchy\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationUserToUser\"}],\"dbName\":\"organization_users\"},\"Dashboard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowedUsers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowedRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"layout\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DashboardToUser\"},{\"name\":\"widgets\",\"kind\":\"object\",\"type\":\"Widget\",\"relationName\":\"DashboardToWidget\"}],\"dbName\":\"dashboards\"},\"Widget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dashboardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visualizationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dashboard\",\"kind\":\"object\",\"type\":\"Dashboard\",\"relationName\":\"DashboardToWidget\"}],\"dbName\":\"widgets\"},\"WidgetSandbox\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visualizationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToWidgetSandbox\"},{\"name\":\"isCommited\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"widget_sandboxes\"},\"QrCodeDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QrCodeDocumentToUser\"}],\"dbName\":\"qr_code_documents\"},\"Otp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"otps\"},\"Management\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ManagementType\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"management\"},\"AddToDatabase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AddToDatabaseStatus\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"AddToDatabase\",\"relationName\":\"Hierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"AddToDatabase\",\"relationName\":\"Hierarchy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"treeItems\",\"kind\":\"object\",\"type\":\"AddToDatabaseTreeItem\",\"relationName\":\"AddToDatabaseToAddToDatabaseTreeItem\"}],\"dbName\":\"add_to_databases\"},\"AddToDatabaseTreeItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AddToDatabaseStatus\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addToDatabaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"AddToDatabaseTreeItem\",\"relationName\":\"TreeHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"AddToDatabaseTreeItem\",\"relationName\":\"TreeHierarchy\"},{\"name\":\"addToDatabase\",\"kind\":\"object\",\"type\":\"AddToDatabase\",\"relationName\":\"AddToDatabaseToAddToDatabaseTreeItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"add_to_database_tree_items\"},\"Chat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visibility\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ChatAIType\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ChatToMessage\"},{\"name\":\"widgetSandboxes\",\"kind\":\"object\",\"type\":\"WidgetSandbox\",\"relationName\":\"ChatToWidgetSandbox\"}],\"dbName\":\"chats\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToMessage\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"Vote\",\"relationName\":\"MessageToVote\"}],\"dbName\":\"messages\"},\"Vote\":{\"fields\":[{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isUpvoted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToVote\"}],\"dbName\":\"votes\"},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suggestions\",\"kind\":\"object\",\"type\":\"Suggestion\",\"relationName\":\"DocumentToSuggestion\"}],\"dbName\":\"documents\"},\"Suggestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentCreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"originalText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suggestedText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isResolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToSuggestion\"}],\"dbName\":\"suggestions\"},\"ProcessSave\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rolesData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"processData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"stepsData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"formsData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"process_saves\"},\"FormGenerationProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormGenerationStatus\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FormGenerationProgressToUser\"},{\"name\":\"form\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormToFormGenerationProgress\"}],\"dbName\":\"form_generation_progress\"}},\"enums\":{},\"types\":{}}")
config.engineWasm = undefined

async function decodeBase64AsWasm(wasmBase64: string): Promise<WebAssembly.Module> {
  const { Buffer } = await import('node:buffer')
  const wasmArray = Buffer.from(wasmBase64, 'base64')
  return new WebAssembly.Module(wasmArray)
}

config.compilerWasm = {
  getRuntime: async () => await import("@prisma/client/runtime/query_compiler_bg.postgresql.js"),

  getQueryCompilerWasmModule: async () => {
    const { wasm } = await import("@prisma/client/runtime/query_compiler_bg.postgresql.wasm-base64.js")
    return await decodeBase64AsWasm(wasm)
  }
}




export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> =
  'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never

export interface PrismaClientConstructor {
    /**
   * ## Prisma Client
   * 
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    Options extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    LogOpts extends LogOptions<Options> = LogOptions<Options>,
    OmitOpts extends Prisma.PrismaClientOptions['omit'] = Options extends { omit: infer U } ? U : Prisma.PrismaClientOptions['omit'],
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
  >(options?: Prisma.Subset<Options, Prisma.PrismaClientOptions> ): PrismaClient<LogOpts, OmitOpts, ExtArgs>
}

/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  in LogOpts extends Prisma.LogLevel = never,
  in out OmitOpts extends Prisma.PrismaClientOptions['omit'] = Prisma.PrismaClientOptions['omit'],
  in out ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

  $on<V extends LogOpts>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<R>


  $extends: runtime.Types.Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<OmitOpts>, ExtArgs, runtime.Types.Utils.Call<Prisma.TypeMapCb<OmitOpts>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.userRole`: Exposes CRUD operations for the **UserRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserRoles
    * const userRoles = await prisma.userRole.findMany()
    * ```
    */
  get userRole(): Prisma.UserRoleDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.file`: Exposes CRUD operations for the **File** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.file.findMany()
    * ```
    */
  get file(): Prisma.FileDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.group`: Exposes CRUD operations for the **Group** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups
    * const groups = await prisma.group.findMany()
    * ```
    */
  get group(): Prisma.GroupDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.groupRole`: Exposes CRUD operations for the **GroupRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GroupRoles
    * const groupRoles = await prisma.groupRole.findMany()
    * ```
    */
  get groupRole(): Prisma.GroupRoleDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.process`: Exposes CRUD operations for the **Process** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Processes
    * const processes = await prisma.process.findMany()
    * ```
    */
  get process(): Prisma.ProcessDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processRole`: Exposes CRUD operations for the **ProcessRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessRoles
    * const processRoles = await prisma.processRole.findMany()
    * ```
    */
  get processRole(): Prisma.ProcessRoleDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.folder`: Exposes CRUD operations for the **Folder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Folders
    * const folders = await prisma.folder.findMany()
    * ```
    */
  get folder(): Prisma.FolderDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processFolder`: Exposes CRUD operations for the **ProcessFolder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessFolders
    * const processFolders = await prisma.processFolder.findMany()
    * ```
    */
  get processFolder(): Prisma.ProcessFolderDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.form`: Exposes CRUD operations for the **Form** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Forms
    * const forms = await prisma.form.findMany()
    * ```
    */
  get form(): Prisma.FormDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.formResponse`: Exposes CRUD operations for the **FormResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormResponses
    * const formResponses = await prisma.formResponse.findMany()
    * ```
    */
  get formResponse(): Prisma.FormResponseDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processForm`: Exposes CRUD operations for the **ProcessForm** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessForms
    * const processForms = await prisma.processForm.findMany()
    * ```
    */
  get processForm(): Prisma.ProcessFormDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.applicantProcess`: Exposes CRUD operations for the **ApplicantProcess** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicantProcesses
    * const applicantProcesses = await prisma.applicantProcess.findMany()
    * ```
    */
  get applicantProcess(): Prisma.ApplicantProcessDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processedApplication`: Exposes CRUD operations for the **ProcessedApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessedApplications
    * const processedApplications = await prisma.processedApplication.findMany()
    * ```
    */
  get processedApplication(): Prisma.ProcessedApplicationDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.aPCompletedForm`: Exposes CRUD operations for the **APCompletedForm** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more APCompletedForms
    * const aPCompletedForms = await prisma.aPCompletedForm.findMany()
    * ```
    */
  get aPCompletedForm(): Prisma.APCompletedFormDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processComment`: Exposes CRUD operations for the **ProcessComment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessComments
    * const processComments = await prisma.processComment.findMany()
    * ```
    */
  get processComment(): Prisma.ProcessCommentDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.organizationUser`: Exposes CRUD operations for the **OrganizationUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrganizationUsers
    * const organizationUsers = await prisma.organizationUser.findMany()
    * ```
    */
  get organizationUser(): Prisma.OrganizationUserDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.dashboard`: Exposes CRUD operations for the **Dashboard** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dashboards
    * const dashboards = await prisma.dashboard.findMany()
    * ```
    */
  get dashboard(): Prisma.DashboardDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.widget`: Exposes CRUD operations for the **Widget** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Widgets
    * const widgets = await prisma.widget.findMany()
    * ```
    */
  get widget(): Prisma.WidgetDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.widgetSandbox`: Exposes CRUD operations for the **WidgetSandbox** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WidgetSandboxes
    * const widgetSandboxes = await prisma.widgetSandbox.findMany()
    * ```
    */
  get widgetSandbox(): Prisma.WidgetSandboxDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.qrCodeDocument`: Exposes CRUD operations for the **QrCodeDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QrCodeDocuments
    * const qrCodeDocuments = await prisma.qrCodeDocument.findMany()
    * ```
    */
  get qrCodeDocument(): Prisma.QrCodeDocumentDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.otp`: Exposes CRUD operations for the **Otp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Otps
    * const otps = await prisma.otp.findMany()
    * ```
    */
  get otp(): Prisma.OtpDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.management`: Exposes CRUD operations for the **Management** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Managements
    * const managements = await prisma.management.findMany()
    * ```
    */
  get management(): Prisma.ManagementDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.addToDatabase`: Exposes CRUD operations for the **AddToDatabase** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AddToDatabases
    * const addToDatabases = await prisma.addToDatabase.findMany()
    * ```
    */
  get addToDatabase(): Prisma.AddToDatabaseDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.addToDatabaseTreeItem`: Exposes CRUD operations for the **AddToDatabaseTreeItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AddToDatabaseTreeItems
    * const addToDatabaseTreeItems = await prisma.addToDatabaseTreeItem.findMany()
    * ```
    */
  get addToDatabaseTreeItem(): Prisma.AddToDatabaseTreeItemDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.chat`: Exposes CRUD operations for the **Chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chats
    * const chats = await prisma.chat.findMany()
    * ```
    */
  get chat(): Prisma.ChatDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.vote`: Exposes CRUD operations for the **Vote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Votes
    * const votes = await prisma.vote.findMany()
    * ```
    */
  get vote(): Prisma.VoteDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **Document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.DocumentDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.suggestion`: Exposes CRUD operations for the **Suggestion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suggestions
    * const suggestions = await prisma.suggestion.findMany()
    * ```
    */
  get suggestion(): Prisma.SuggestionDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.processSave`: Exposes CRUD operations for the **ProcessSave** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessSaves
    * const processSaves = await prisma.processSave.findMany()
    * ```
    */
  get processSave(): Prisma.ProcessSaveDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.formGenerationProgress`: Exposes CRUD operations for the **FormGenerationProgress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormGenerationProgresses
    * const formGenerationProgresses = await prisma.formGenerationProgress.findMany()
    * ```
    */
  get formGenerationProgress(): Prisma.FormGenerationProgressDelegate<ExtArgs, { omit: OmitOpts }>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor
}
