
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `APCompletedForm` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model APCompletedForm
 * 
 */
export type APCompletedFormModel = runtime.Types.Result.DefaultSelection<Prisma.$APCompletedFormPayload>

export type AggregateAPCompletedForm = {
  _count: APCompletedFormCountAggregateOutputType | null
  _min: APCompletedFormMinAggregateOutputType | null
  _max: APCompletedFormMaxAggregateOutputType | null
}

export type APCompletedFormMinAggregateOutputType = {
  id: string | null
  applicantProcessId: string | null
  formId: string | null
  reviewerId: string | null
  nextStaffId: string | null
  nextStepType: $Enums.NextStepType | null
  nextStepSpecifiedTo: string | null
  notificationType: $Enums.NextStepType | null
  notificationToId: string | null
  notificationComment: string | null
  notifyApplicant: boolean | null
  applicantNotificationContent: string | null
  editApplicationStatus: boolean | null
  applicantViewFormAfterCompletion: boolean | null
  createdAt: Date | null
}

export type APCompletedFormMaxAggregateOutputType = {
  id: string | null
  applicantProcessId: string | null
  formId: string | null
  reviewerId: string | null
  nextStaffId: string | null
  nextStepType: $Enums.NextStepType | null
  nextStepSpecifiedTo: string | null
  notificationType: $Enums.NextStepType | null
  notificationToId: string | null
  notificationComment: string | null
  notifyApplicant: boolean | null
  applicantNotificationContent: string | null
  editApplicationStatus: boolean | null
  applicantViewFormAfterCompletion: boolean | null
  createdAt: Date | null
}

export type APCompletedFormCountAggregateOutputType = {
  id: number
  applicantProcessId: number
  formId: number
  reviewerId: number
  nextStaffId: number
  nextStepType: number
  nextStepRoles: number
  nextStepSpecifiedTo: number
  notificationType: number
  notificationToId: number
  notificationToRoles: number
  notificationComment: number
  notifyApplicant: number
  applicantNotificationContent: number
  editApplicationStatus: number
  applicantViewFormAfterCompletion: number
  createdAt: number
  _all: number
}


export type APCompletedFormMinAggregateInputType = {
  id?: true
  applicantProcessId?: true
  formId?: true
  reviewerId?: true
  nextStaffId?: true
  nextStepType?: true
  nextStepSpecifiedTo?: true
  notificationType?: true
  notificationToId?: true
  notificationComment?: true
  notifyApplicant?: true
  applicantNotificationContent?: true
  editApplicationStatus?: true
  applicantViewFormAfterCompletion?: true
  createdAt?: true
}

export type APCompletedFormMaxAggregateInputType = {
  id?: true
  applicantProcessId?: true
  formId?: true
  reviewerId?: true
  nextStaffId?: true
  nextStepType?: true
  nextStepSpecifiedTo?: true
  notificationType?: true
  notificationToId?: true
  notificationComment?: true
  notifyApplicant?: true
  applicantNotificationContent?: true
  editApplicationStatus?: true
  applicantViewFormAfterCompletion?: true
  createdAt?: true
}

export type APCompletedFormCountAggregateInputType = {
  id?: true
  applicantProcessId?: true
  formId?: true
  reviewerId?: true
  nextStaffId?: true
  nextStepType?: true
  nextStepRoles?: true
  nextStepSpecifiedTo?: true
  notificationType?: true
  notificationToId?: true
  notificationToRoles?: true
  notificationComment?: true
  notifyApplicant?: true
  applicantNotificationContent?: true
  editApplicationStatus?: true
  applicantViewFormAfterCompletion?: true
  createdAt?: true
  _all?: true
}

export type APCompletedFormAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which APCompletedForm to aggregate.
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of APCompletedForms to fetch.
   */
  orderBy?: Prisma.APCompletedFormOrderByWithRelationInput | Prisma.APCompletedFormOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.APCompletedFormWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` APCompletedForms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` APCompletedForms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned APCompletedForms
  **/
  _count?: true | APCompletedFormCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: APCompletedFormMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: APCompletedFormMaxAggregateInputType
}

export type GetAPCompletedFormAggregateType<T extends APCompletedFormAggregateArgs> = {
      [P in keyof T & keyof AggregateAPCompletedForm]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAPCompletedForm[P]>
    : Prisma.GetScalarType<T[P], AggregateAPCompletedForm[P]>
}




export type APCompletedFormGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.APCompletedFormWhereInput
  orderBy?: Prisma.APCompletedFormOrderByWithAggregationInput | Prisma.APCompletedFormOrderByWithAggregationInput[]
  by: Prisma.APCompletedFormScalarFieldEnum[] | Prisma.APCompletedFormScalarFieldEnum
  having?: Prisma.APCompletedFormScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: APCompletedFormCountAggregateInputType | true
  _min?: APCompletedFormMinAggregateInputType
  _max?: APCompletedFormMaxAggregateInputType
}

export type APCompletedFormGroupByOutputType = {
  id: string
  applicantProcessId: string
  formId: string
  reviewerId: string | null
  nextStaffId: string | null
  nextStepType: $Enums.NextStepType
  nextStepRoles: string[]
  nextStepSpecifiedTo: string | null
  notificationType: $Enums.NextStepType
  notificationToId: string | null
  notificationToRoles: string[]
  notificationComment: string | null
  notifyApplicant: boolean
  applicantNotificationContent: string | null
  editApplicationStatus: boolean
  applicantViewFormAfterCompletion: boolean
  createdAt: Date
  _count: APCompletedFormCountAggregateOutputType | null
  _min: APCompletedFormMinAggregateOutputType | null
  _max: APCompletedFormMaxAggregateOutputType | null
}

type GetAPCompletedFormGroupByPayload<T extends APCompletedFormGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<APCompletedFormGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof APCompletedFormGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], APCompletedFormGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], APCompletedFormGroupByOutputType[P]>
      }
    >
  >



export type APCompletedFormWhereInput = {
  AND?: Prisma.APCompletedFormWhereInput | Prisma.APCompletedFormWhereInput[]
  OR?: Prisma.APCompletedFormWhereInput[]
  NOT?: Prisma.APCompletedFormWhereInput | Prisma.APCompletedFormWhereInput[]
  id?: Prisma.UuidFilter<"APCompletedForm"> | string
  applicantProcessId?: Prisma.UuidFilter<"APCompletedForm"> | string
  formId?: Prisma.UuidFilter<"APCompletedForm"> | string
  reviewerId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStaffId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStepType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  nextStepRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  nextStepSpecifiedTo?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notificationType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  notificationToId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  notificationToRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  notificationComment?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notifyApplicant?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantNotificationContent?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  editApplicationStatus?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  createdAt?: Prisma.DateTimeFilter<"APCompletedForm"> | Date | string
  applicantProcess?: Prisma.XOR<Prisma.ApplicantProcessScalarRelationFilter, Prisma.ApplicantProcessWhereInput>
}

export type APCompletedFormOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  applicantProcessId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrderInput | Prisma.SortOrder
  nextStaffId?: Prisma.SortOrderInput | Prisma.SortOrder
  nextStepType?: Prisma.SortOrder
  nextStepRoles?: Prisma.SortOrder
  nextStepSpecifiedTo?: Prisma.SortOrderInput | Prisma.SortOrder
  notificationType?: Prisma.SortOrder
  notificationToId?: Prisma.SortOrderInput | Prisma.SortOrder
  notificationToRoles?: Prisma.SortOrder
  notificationComment?: Prisma.SortOrderInput | Prisma.SortOrder
  notifyApplicant?: Prisma.SortOrder
  applicantNotificationContent?: Prisma.SortOrderInput | Prisma.SortOrder
  editApplicationStatus?: Prisma.SortOrder
  applicantViewFormAfterCompletion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  applicantProcess?: Prisma.ApplicantProcessOrderByWithRelationInput
  _relevance?: Prisma.APCompletedFormOrderByRelevanceInput
}

export type APCompletedFormWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.APCompletedFormWhereInput | Prisma.APCompletedFormWhereInput[]
  OR?: Prisma.APCompletedFormWhereInput[]
  NOT?: Prisma.APCompletedFormWhereInput | Prisma.APCompletedFormWhereInput[]
  applicantProcessId?: Prisma.UuidFilter<"APCompletedForm"> | string
  formId?: Prisma.UuidFilter<"APCompletedForm"> | string
  reviewerId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStaffId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStepType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  nextStepRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  nextStepSpecifiedTo?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notificationType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  notificationToId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  notificationToRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  notificationComment?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notifyApplicant?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantNotificationContent?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  editApplicationStatus?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  createdAt?: Prisma.DateTimeFilter<"APCompletedForm"> | Date | string
  applicantProcess?: Prisma.XOR<Prisma.ApplicantProcessScalarRelationFilter, Prisma.ApplicantProcessWhereInput>
}, "id">

export type APCompletedFormOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  applicantProcessId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrderInput | Prisma.SortOrder
  nextStaffId?: Prisma.SortOrderInput | Prisma.SortOrder
  nextStepType?: Prisma.SortOrder
  nextStepRoles?: Prisma.SortOrder
  nextStepSpecifiedTo?: Prisma.SortOrderInput | Prisma.SortOrder
  notificationType?: Prisma.SortOrder
  notificationToId?: Prisma.SortOrderInput | Prisma.SortOrder
  notificationToRoles?: Prisma.SortOrder
  notificationComment?: Prisma.SortOrderInput | Prisma.SortOrder
  notifyApplicant?: Prisma.SortOrder
  applicantNotificationContent?: Prisma.SortOrderInput | Prisma.SortOrder
  editApplicationStatus?: Prisma.SortOrder
  applicantViewFormAfterCompletion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.APCompletedFormCountOrderByAggregateInput
  _max?: Prisma.APCompletedFormMaxOrderByAggregateInput
  _min?: Prisma.APCompletedFormMinOrderByAggregateInput
}

export type APCompletedFormScalarWhereWithAggregatesInput = {
  AND?: Prisma.APCompletedFormScalarWhereWithAggregatesInput | Prisma.APCompletedFormScalarWhereWithAggregatesInput[]
  OR?: Prisma.APCompletedFormScalarWhereWithAggregatesInput[]
  NOT?: Prisma.APCompletedFormScalarWhereWithAggregatesInput | Prisma.APCompletedFormScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"APCompletedForm"> | string
  applicantProcessId?: Prisma.UuidWithAggregatesFilter<"APCompletedForm"> | string
  formId?: Prisma.UuidWithAggregatesFilter<"APCompletedForm"> | string
  reviewerId?: Prisma.UuidNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  nextStaffId?: Prisma.UuidNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  nextStepType?: Prisma.EnumNextStepTypeWithAggregatesFilter<"APCompletedForm"> | $Enums.NextStepType
  nextStepRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  nextStepSpecifiedTo?: Prisma.StringNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  notificationType?: Prisma.EnumNextStepTypeWithAggregatesFilter<"APCompletedForm"> | $Enums.NextStepType
  notificationToId?: Prisma.UuidNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  notificationToRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  notificationComment?: Prisma.StringNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  notifyApplicant?: Prisma.BoolWithAggregatesFilter<"APCompletedForm"> | boolean
  applicantNotificationContent?: Prisma.StringNullableWithAggregatesFilter<"APCompletedForm"> | string | null
  editApplicationStatus?: Prisma.BoolWithAggregatesFilter<"APCompletedForm"> | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolWithAggregatesFilter<"APCompletedForm"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"APCompletedForm"> | Date | string
}

export type APCompletedFormCreateInput = {
  id?: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
  applicantProcess: Prisma.ApplicantProcessCreateNestedOneWithoutCompletedFormsInput
}

export type APCompletedFormUncheckedCreateInput = {
  id?: string
  applicantProcessId: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
}

export type APCompletedFormUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcess?: Prisma.ApplicantProcessUpdateOneRequiredWithoutCompletedFormsNestedInput
}

export type APCompletedFormUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  applicantProcessId?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type APCompletedFormCreateManyInput = {
  id?: string
  applicantProcessId: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
}

export type APCompletedFormUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type APCompletedFormUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  applicantProcessId?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type APCompletedFormListRelationFilter = {
  every?: Prisma.APCompletedFormWhereInput
  some?: Prisma.APCompletedFormWhereInput
  none?: Prisma.APCompletedFormWhereInput
}

export type APCompletedFormOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type APCompletedFormOrderByRelevanceInput = {
  fields: Prisma.APCompletedFormOrderByRelevanceFieldEnum | Prisma.APCompletedFormOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type APCompletedFormCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  applicantProcessId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  nextStaffId?: Prisma.SortOrder
  nextStepType?: Prisma.SortOrder
  nextStepRoles?: Prisma.SortOrder
  nextStepSpecifiedTo?: Prisma.SortOrder
  notificationType?: Prisma.SortOrder
  notificationToId?: Prisma.SortOrder
  notificationToRoles?: Prisma.SortOrder
  notificationComment?: Prisma.SortOrder
  notifyApplicant?: Prisma.SortOrder
  applicantNotificationContent?: Prisma.SortOrder
  editApplicationStatus?: Prisma.SortOrder
  applicantViewFormAfterCompletion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type APCompletedFormMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  applicantProcessId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  nextStaffId?: Prisma.SortOrder
  nextStepType?: Prisma.SortOrder
  nextStepSpecifiedTo?: Prisma.SortOrder
  notificationType?: Prisma.SortOrder
  notificationToId?: Prisma.SortOrder
  notificationComment?: Prisma.SortOrder
  notifyApplicant?: Prisma.SortOrder
  applicantNotificationContent?: Prisma.SortOrder
  editApplicationStatus?: Prisma.SortOrder
  applicantViewFormAfterCompletion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type APCompletedFormMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  applicantProcessId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  nextStaffId?: Prisma.SortOrder
  nextStepType?: Prisma.SortOrder
  nextStepSpecifiedTo?: Prisma.SortOrder
  notificationType?: Prisma.SortOrder
  notificationToId?: Prisma.SortOrder
  notificationComment?: Prisma.SortOrder
  notifyApplicant?: Prisma.SortOrder
  applicantNotificationContent?: Prisma.SortOrder
  editApplicationStatus?: Prisma.SortOrder
  applicantViewFormAfterCompletion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type APCompletedFormCreateNestedManyWithoutApplicantProcessInput = {
  create?: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput> | Prisma.APCompletedFormCreateWithoutApplicantProcessInput[] | Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput[]
  connectOrCreate?: Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput | Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput[]
  createMany?: Prisma.APCompletedFormCreateManyApplicantProcessInputEnvelope
  connect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
}

export type APCompletedFormUncheckedCreateNestedManyWithoutApplicantProcessInput = {
  create?: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput> | Prisma.APCompletedFormCreateWithoutApplicantProcessInput[] | Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput[]
  connectOrCreate?: Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput | Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput[]
  createMany?: Prisma.APCompletedFormCreateManyApplicantProcessInputEnvelope
  connect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
}

export type APCompletedFormUpdateManyWithoutApplicantProcessNestedInput = {
  create?: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput> | Prisma.APCompletedFormCreateWithoutApplicantProcessInput[] | Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput[]
  connectOrCreate?: Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput | Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput[]
  upsert?: Prisma.APCompletedFormUpsertWithWhereUniqueWithoutApplicantProcessInput | Prisma.APCompletedFormUpsertWithWhereUniqueWithoutApplicantProcessInput[]
  createMany?: Prisma.APCompletedFormCreateManyApplicantProcessInputEnvelope
  set?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  disconnect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  delete?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  connect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  update?: Prisma.APCompletedFormUpdateWithWhereUniqueWithoutApplicantProcessInput | Prisma.APCompletedFormUpdateWithWhereUniqueWithoutApplicantProcessInput[]
  updateMany?: Prisma.APCompletedFormUpdateManyWithWhereWithoutApplicantProcessInput | Prisma.APCompletedFormUpdateManyWithWhereWithoutApplicantProcessInput[]
  deleteMany?: Prisma.APCompletedFormScalarWhereInput | Prisma.APCompletedFormScalarWhereInput[]
}

export type APCompletedFormUncheckedUpdateManyWithoutApplicantProcessNestedInput = {
  create?: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput> | Prisma.APCompletedFormCreateWithoutApplicantProcessInput[] | Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput[]
  connectOrCreate?: Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput | Prisma.APCompletedFormCreateOrConnectWithoutApplicantProcessInput[]
  upsert?: Prisma.APCompletedFormUpsertWithWhereUniqueWithoutApplicantProcessInput | Prisma.APCompletedFormUpsertWithWhereUniqueWithoutApplicantProcessInput[]
  createMany?: Prisma.APCompletedFormCreateManyApplicantProcessInputEnvelope
  set?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  disconnect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  delete?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  connect?: Prisma.APCompletedFormWhereUniqueInput | Prisma.APCompletedFormWhereUniqueInput[]
  update?: Prisma.APCompletedFormUpdateWithWhereUniqueWithoutApplicantProcessInput | Prisma.APCompletedFormUpdateWithWhereUniqueWithoutApplicantProcessInput[]
  updateMany?: Prisma.APCompletedFormUpdateManyWithWhereWithoutApplicantProcessInput | Prisma.APCompletedFormUpdateManyWithWhereWithoutApplicantProcessInput[]
  deleteMany?: Prisma.APCompletedFormScalarWhereInput | Prisma.APCompletedFormScalarWhereInput[]
}

export type APCompletedFormCreatenextStepRolesInput = {
  set: string[]
}

export type APCompletedFormCreatenotificationToRolesInput = {
  set: string[]
}

export type APCompletedFormUpdatenextStepRolesInput = {
  set?: string[]
  push?: string | string[]
}

export type APCompletedFormUpdatenotificationToRolesInput = {
  set?: string[]
  push?: string | string[]
}

export type APCompletedFormCreateWithoutApplicantProcessInput = {
  id?: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
}

export type APCompletedFormUncheckedCreateWithoutApplicantProcessInput = {
  id?: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
}

export type APCompletedFormCreateOrConnectWithoutApplicantProcessInput = {
  where: Prisma.APCompletedFormWhereUniqueInput
  create: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput>
}

export type APCompletedFormCreateManyApplicantProcessInputEnvelope = {
  data: Prisma.APCompletedFormCreateManyApplicantProcessInput | Prisma.APCompletedFormCreateManyApplicantProcessInput[]
  skipDuplicates?: boolean
}

export type APCompletedFormUpsertWithWhereUniqueWithoutApplicantProcessInput = {
  where: Prisma.APCompletedFormWhereUniqueInput
  update: Prisma.XOR<Prisma.APCompletedFormUpdateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedUpdateWithoutApplicantProcessInput>
  create: Prisma.XOR<Prisma.APCompletedFormCreateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedCreateWithoutApplicantProcessInput>
}

export type APCompletedFormUpdateWithWhereUniqueWithoutApplicantProcessInput = {
  where: Prisma.APCompletedFormWhereUniqueInput
  data: Prisma.XOR<Prisma.APCompletedFormUpdateWithoutApplicantProcessInput, Prisma.APCompletedFormUncheckedUpdateWithoutApplicantProcessInput>
}

export type APCompletedFormUpdateManyWithWhereWithoutApplicantProcessInput = {
  where: Prisma.APCompletedFormScalarWhereInput
  data: Prisma.XOR<Prisma.APCompletedFormUpdateManyMutationInput, Prisma.APCompletedFormUncheckedUpdateManyWithoutApplicantProcessInput>
}

export type APCompletedFormScalarWhereInput = {
  AND?: Prisma.APCompletedFormScalarWhereInput | Prisma.APCompletedFormScalarWhereInput[]
  OR?: Prisma.APCompletedFormScalarWhereInput[]
  NOT?: Prisma.APCompletedFormScalarWhereInput | Prisma.APCompletedFormScalarWhereInput[]
  id?: Prisma.UuidFilter<"APCompletedForm"> | string
  applicantProcessId?: Prisma.UuidFilter<"APCompletedForm"> | string
  formId?: Prisma.UuidFilter<"APCompletedForm"> | string
  reviewerId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStaffId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  nextStepType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  nextStepRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  nextStepSpecifiedTo?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notificationType?: Prisma.EnumNextStepTypeFilter<"APCompletedForm"> | $Enums.NextStepType
  notificationToId?: Prisma.UuidNullableFilter<"APCompletedForm"> | string | null
  notificationToRoles?: Prisma.StringNullableListFilter<"APCompletedForm">
  notificationComment?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  notifyApplicant?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantNotificationContent?: Prisma.StringNullableFilter<"APCompletedForm"> | string | null
  editApplicationStatus?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFilter<"APCompletedForm"> | boolean
  createdAt?: Prisma.DateTimeFilter<"APCompletedForm"> | Date | string
}

export type APCompletedFormCreateManyApplicantProcessInput = {
  id?: string
  formId: string
  reviewerId?: string | null
  nextStaffId?: string | null
  nextStepType?: $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormCreatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: string | null
  notificationType?: $Enums.NextStepType
  notificationToId?: string | null
  notificationToRoles?: Prisma.APCompletedFormCreatenotificationToRolesInput | string[]
  notificationComment?: string | null
  notifyApplicant?: boolean
  applicantNotificationContent?: string | null
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: Date | string
}

export type APCompletedFormUpdateWithoutApplicantProcessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type APCompletedFormUncheckedUpdateWithoutApplicantProcessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type APCompletedFormUncheckedUpdateManyWithoutApplicantProcessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.StringFieldUpdateOperationsInput | string
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStaffId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nextStepType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  nextStepRoles?: Prisma.APCompletedFormUpdatenextStepRolesInput | string[]
  nextStepSpecifiedTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationType?: Prisma.EnumNextStepTypeFieldUpdateOperationsInput | $Enums.NextStepType
  notificationToId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notificationToRoles?: Prisma.APCompletedFormUpdatenotificationToRolesInput | string[]
  notificationComment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notifyApplicant?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantNotificationContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  editApplicationStatus?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewFormAfterCompletion?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type APCompletedFormSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  applicantProcessId?: boolean
  formId?: boolean
  reviewerId?: boolean
  nextStaffId?: boolean
  nextStepType?: boolean
  nextStepRoles?: boolean
  nextStepSpecifiedTo?: boolean
  notificationType?: boolean
  notificationToId?: boolean
  notificationToRoles?: boolean
  notificationComment?: boolean
  notifyApplicant?: boolean
  applicantNotificationContent?: boolean
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: boolean
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}, ExtArgs["result"]["aPCompletedForm"]>

export type APCompletedFormSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  applicantProcessId?: boolean
  formId?: boolean
  reviewerId?: boolean
  nextStaffId?: boolean
  nextStepType?: boolean
  nextStepRoles?: boolean
  nextStepSpecifiedTo?: boolean
  notificationType?: boolean
  notificationToId?: boolean
  notificationToRoles?: boolean
  notificationComment?: boolean
  notifyApplicant?: boolean
  applicantNotificationContent?: boolean
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: boolean
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}, ExtArgs["result"]["aPCompletedForm"]>

export type APCompletedFormSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  applicantProcessId?: boolean
  formId?: boolean
  reviewerId?: boolean
  nextStaffId?: boolean
  nextStepType?: boolean
  nextStepRoles?: boolean
  nextStepSpecifiedTo?: boolean
  notificationType?: boolean
  notificationToId?: boolean
  notificationToRoles?: boolean
  notificationComment?: boolean
  notifyApplicant?: boolean
  applicantNotificationContent?: boolean
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: boolean
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}, ExtArgs["result"]["aPCompletedForm"]>

export type APCompletedFormSelectScalar = {
  id?: boolean
  applicantProcessId?: boolean
  formId?: boolean
  reviewerId?: boolean
  nextStaffId?: boolean
  nextStepType?: boolean
  nextStepRoles?: boolean
  nextStepSpecifiedTo?: boolean
  notificationType?: boolean
  notificationToId?: boolean
  notificationToRoles?: boolean
  notificationComment?: boolean
  notifyApplicant?: boolean
  applicantNotificationContent?: boolean
  editApplicationStatus?: boolean
  applicantViewFormAfterCompletion?: boolean
  createdAt?: boolean
}

export type APCompletedFormOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "applicantProcessId" | "formId" | "reviewerId" | "nextStaffId" | "nextStepType" | "nextStepRoles" | "nextStepSpecifiedTo" | "notificationType" | "notificationToId" | "notificationToRoles" | "notificationComment" | "notifyApplicant" | "applicantNotificationContent" | "editApplicationStatus" | "applicantViewFormAfterCompletion" | "createdAt", ExtArgs["result"]["aPCompletedForm"]>
export type APCompletedFormInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}
export type APCompletedFormIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}
export type APCompletedFormIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcess?: boolean | Prisma.ApplicantProcessDefaultArgs<ExtArgs>
}

export type $APCompletedFormPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "APCompletedForm"
  objects: {
    applicantProcess: Prisma.$ApplicantProcessPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    applicantProcessId: string
    formId: string
    reviewerId: string | null
    nextStaffId: string | null
    nextStepType: $Enums.NextStepType
    nextStepRoles: string[]
    nextStepSpecifiedTo: string | null
    notificationType: $Enums.NextStepType
    notificationToId: string | null
    notificationToRoles: string[]
    notificationComment: string | null
    notifyApplicant: boolean
    applicantNotificationContent: string | null
    editApplicationStatus: boolean
    applicantViewFormAfterCompletion: boolean
    createdAt: Date
  }, ExtArgs["result"]["aPCompletedForm"]>
  composites: {}
}

export type APCompletedFormGetPayload<S extends boolean | null | undefined | APCompletedFormDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload, S>

export type APCompletedFormCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<APCompletedFormFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: APCompletedFormCountAggregateInputType | true
  }

export interface APCompletedFormDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['APCompletedForm'], meta: { name: 'APCompletedForm' } }
  /**
   * Find zero or one APCompletedForm that matches the filter.
   * @param {APCompletedFormFindUniqueArgs} args - Arguments to find a APCompletedForm
   * @example
   * // Get one APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends APCompletedFormFindUniqueArgs>(args: Prisma.SelectSubset<T, APCompletedFormFindUniqueArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one APCompletedForm that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {APCompletedFormFindUniqueOrThrowArgs} args - Arguments to find a APCompletedForm
   * @example
   * // Get one APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends APCompletedFormFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, APCompletedFormFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first APCompletedForm that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormFindFirstArgs} args - Arguments to find a APCompletedForm
   * @example
   * // Get one APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends APCompletedFormFindFirstArgs>(args?: Prisma.SelectSubset<T, APCompletedFormFindFirstArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first APCompletedForm that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormFindFirstOrThrowArgs} args - Arguments to find a APCompletedForm
   * @example
   * // Get one APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends APCompletedFormFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, APCompletedFormFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more APCompletedForms that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all APCompletedForms
   * const aPCompletedForms = await prisma.aPCompletedForm.findMany()
   * 
   * // Get first 10 APCompletedForms
   * const aPCompletedForms = await prisma.aPCompletedForm.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const aPCompletedFormWithIdOnly = await prisma.aPCompletedForm.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends APCompletedFormFindManyArgs>(args?: Prisma.SelectSubset<T, APCompletedFormFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a APCompletedForm.
   * @param {APCompletedFormCreateArgs} args - Arguments to create a APCompletedForm.
   * @example
   * // Create one APCompletedForm
   * const APCompletedForm = await prisma.aPCompletedForm.create({
   *   data: {
   *     // ... data to create a APCompletedForm
   *   }
   * })
   * 
   */
  create<T extends APCompletedFormCreateArgs>(args: Prisma.SelectSubset<T, APCompletedFormCreateArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many APCompletedForms.
   * @param {APCompletedFormCreateManyArgs} args - Arguments to create many APCompletedForms.
   * @example
   * // Create many APCompletedForms
   * const aPCompletedForm = await prisma.aPCompletedForm.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends APCompletedFormCreateManyArgs>(args?: Prisma.SelectSubset<T, APCompletedFormCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many APCompletedForms and returns the data saved in the database.
   * @param {APCompletedFormCreateManyAndReturnArgs} args - Arguments to create many APCompletedForms.
   * @example
   * // Create many APCompletedForms
   * const aPCompletedForm = await prisma.aPCompletedForm.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many APCompletedForms and only return the `id`
   * const aPCompletedFormWithIdOnly = await prisma.aPCompletedForm.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends APCompletedFormCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, APCompletedFormCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a APCompletedForm.
   * @param {APCompletedFormDeleteArgs} args - Arguments to delete one APCompletedForm.
   * @example
   * // Delete one APCompletedForm
   * const APCompletedForm = await prisma.aPCompletedForm.delete({
   *   where: {
   *     // ... filter to delete one APCompletedForm
   *   }
   * })
   * 
   */
  delete<T extends APCompletedFormDeleteArgs>(args: Prisma.SelectSubset<T, APCompletedFormDeleteArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one APCompletedForm.
   * @param {APCompletedFormUpdateArgs} args - Arguments to update one APCompletedForm.
   * @example
   * // Update one APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends APCompletedFormUpdateArgs>(args: Prisma.SelectSubset<T, APCompletedFormUpdateArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more APCompletedForms.
   * @param {APCompletedFormDeleteManyArgs} args - Arguments to filter APCompletedForms to delete.
   * @example
   * // Delete a few APCompletedForms
   * const { count } = await prisma.aPCompletedForm.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends APCompletedFormDeleteManyArgs>(args?: Prisma.SelectSubset<T, APCompletedFormDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more APCompletedForms.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many APCompletedForms
   * const aPCompletedForm = await prisma.aPCompletedForm.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends APCompletedFormUpdateManyArgs>(args: Prisma.SelectSubset<T, APCompletedFormUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more APCompletedForms and returns the data updated in the database.
   * @param {APCompletedFormUpdateManyAndReturnArgs} args - Arguments to update many APCompletedForms.
   * @example
   * // Update many APCompletedForms
   * const aPCompletedForm = await prisma.aPCompletedForm.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more APCompletedForms and only return the `id`
   * const aPCompletedFormWithIdOnly = await prisma.aPCompletedForm.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends APCompletedFormUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, APCompletedFormUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one APCompletedForm.
   * @param {APCompletedFormUpsertArgs} args - Arguments to update or create a APCompletedForm.
   * @example
   * // Update or create a APCompletedForm
   * const aPCompletedForm = await prisma.aPCompletedForm.upsert({
   *   create: {
   *     // ... data to create a APCompletedForm
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the APCompletedForm we want to update
   *   }
   * })
   */
  upsert<T extends APCompletedFormUpsertArgs>(args: Prisma.SelectSubset<T, APCompletedFormUpsertArgs<ExtArgs>>): Prisma.Prisma__APCompletedFormClient<runtime.Types.Result.GetResult<Prisma.$APCompletedFormPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of APCompletedForms.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormCountArgs} args - Arguments to filter APCompletedForms to count.
   * @example
   * // Count the number of APCompletedForms
   * const count = await prisma.aPCompletedForm.count({
   *   where: {
   *     // ... the filter for the APCompletedForms we want to count
   *   }
   * })
  **/
  count<T extends APCompletedFormCountArgs>(
    args?: Prisma.Subset<T, APCompletedFormCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], APCompletedFormCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a APCompletedForm.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends APCompletedFormAggregateArgs>(args: Prisma.Subset<T, APCompletedFormAggregateArgs>): Prisma.PrismaPromise<GetAPCompletedFormAggregateType<T>>

  /**
   * Group by APCompletedForm.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {APCompletedFormGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends APCompletedFormGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: APCompletedFormGroupByArgs['orderBy'] }
      : { orderBy?: APCompletedFormGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, APCompletedFormGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAPCompletedFormGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the APCompletedForm model
 */
readonly fields: APCompletedFormFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for APCompletedForm.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__APCompletedFormClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  applicantProcess<T extends Prisma.ApplicantProcessDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ApplicantProcessDefaultArgs<ExtArgs>>): Prisma.Prisma__ApplicantProcessClient<runtime.Types.Result.GetResult<Prisma.$ApplicantProcessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the APCompletedForm model
 */
export interface APCompletedFormFieldRefs {
  readonly id: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly applicantProcessId: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly formId: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly reviewerId: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly nextStaffId: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly nextStepType: Prisma.FieldRef<"APCompletedForm", 'NextStepType'>
  readonly nextStepRoles: Prisma.FieldRef<"APCompletedForm", 'String[]'>
  readonly nextStepSpecifiedTo: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly notificationType: Prisma.FieldRef<"APCompletedForm", 'NextStepType'>
  readonly notificationToId: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly notificationToRoles: Prisma.FieldRef<"APCompletedForm", 'String[]'>
  readonly notificationComment: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly notifyApplicant: Prisma.FieldRef<"APCompletedForm", 'Boolean'>
  readonly applicantNotificationContent: Prisma.FieldRef<"APCompletedForm", 'String'>
  readonly editApplicationStatus: Prisma.FieldRef<"APCompletedForm", 'Boolean'>
  readonly applicantViewFormAfterCompletion: Prisma.FieldRef<"APCompletedForm", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"APCompletedForm", 'DateTime'>
}
    

// Custom InputTypes
/**
 * APCompletedForm findUnique
 */
export type APCompletedFormFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter, which APCompletedForm to fetch.
   */
  where: Prisma.APCompletedFormWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm findUniqueOrThrow
 */
export type APCompletedFormFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter, which APCompletedForm to fetch.
   */
  where: Prisma.APCompletedFormWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm findFirst
 */
export type APCompletedFormFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter, which APCompletedForm to fetch.
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of APCompletedForms to fetch.
   */
  orderBy?: Prisma.APCompletedFormOrderByWithRelationInput | Prisma.APCompletedFormOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for APCompletedForms.
   */
  cursor?: Prisma.APCompletedFormWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` APCompletedForms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` APCompletedForms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of APCompletedForms.
   */
  distinct?: Prisma.APCompletedFormScalarFieldEnum | Prisma.APCompletedFormScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm findFirstOrThrow
 */
export type APCompletedFormFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter, which APCompletedForm to fetch.
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of APCompletedForms to fetch.
   */
  orderBy?: Prisma.APCompletedFormOrderByWithRelationInput | Prisma.APCompletedFormOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for APCompletedForms.
   */
  cursor?: Prisma.APCompletedFormWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` APCompletedForms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` APCompletedForms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of APCompletedForms.
   */
  distinct?: Prisma.APCompletedFormScalarFieldEnum | Prisma.APCompletedFormScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm findMany
 */
export type APCompletedFormFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter, which APCompletedForms to fetch.
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of APCompletedForms to fetch.
   */
  orderBy?: Prisma.APCompletedFormOrderByWithRelationInput | Prisma.APCompletedFormOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing APCompletedForms.
   */
  cursor?: Prisma.APCompletedFormWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` APCompletedForms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` APCompletedForms.
   */
  skip?: number
  distinct?: Prisma.APCompletedFormScalarFieldEnum | Prisma.APCompletedFormScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm create
 */
export type APCompletedFormCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * The data needed to create a APCompletedForm.
   */
  data: Prisma.XOR<Prisma.APCompletedFormCreateInput, Prisma.APCompletedFormUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm createMany
 */
export type APCompletedFormCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many APCompletedForms.
   */
  data: Prisma.APCompletedFormCreateManyInput | Prisma.APCompletedFormCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * APCompletedForm createManyAndReturn
 */
export type APCompletedFormCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * The data used to create many APCompletedForms.
   */
  data: Prisma.APCompletedFormCreateManyInput | Prisma.APCompletedFormCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * APCompletedForm update
 */
export type APCompletedFormUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * The data needed to update a APCompletedForm.
   */
  data: Prisma.XOR<Prisma.APCompletedFormUpdateInput, Prisma.APCompletedFormUncheckedUpdateInput>
  /**
   * Choose, which APCompletedForm to update.
   */
  where: Prisma.APCompletedFormWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm updateMany
 */
export type APCompletedFormUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update APCompletedForms.
   */
  data: Prisma.XOR<Prisma.APCompletedFormUpdateManyMutationInput, Prisma.APCompletedFormUncheckedUpdateManyInput>
  /**
   * Filter which APCompletedForms to update
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * Limit how many APCompletedForms to update.
   */
  limit?: number
}

/**
 * APCompletedForm updateManyAndReturn
 */
export type APCompletedFormUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * The data used to update APCompletedForms.
   */
  data: Prisma.XOR<Prisma.APCompletedFormUpdateManyMutationInput, Prisma.APCompletedFormUncheckedUpdateManyInput>
  /**
   * Filter which APCompletedForms to update
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * Limit how many APCompletedForms to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * APCompletedForm upsert
 */
export type APCompletedFormUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * The filter to search for the APCompletedForm to update in case it exists.
   */
  where: Prisma.APCompletedFormWhereUniqueInput
  /**
   * In case the APCompletedForm found by the `where` argument doesn't exist, create a new APCompletedForm with this data.
   */
  create: Prisma.XOR<Prisma.APCompletedFormCreateInput, Prisma.APCompletedFormUncheckedCreateInput>
  /**
   * In case the APCompletedForm was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.APCompletedFormUpdateInput, Prisma.APCompletedFormUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm delete
 */
export type APCompletedFormDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
  /**
   * Filter which APCompletedForm to delete.
   */
  where: Prisma.APCompletedFormWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * APCompletedForm deleteMany
 */
export type APCompletedFormDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which APCompletedForms to delete
   */
  where?: Prisma.APCompletedFormWhereInput
  /**
   * Limit how many APCompletedForms to delete.
   */
  limit?: number
}

/**
 * APCompletedForm without action
 */
export type APCompletedFormDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the APCompletedForm
   */
  select?: Prisma.APCompletedFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the APCompletedForm
   */
  omit?: Prisma.APCompletedFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.APCompletedFormInclude<ExtArgs> | null
}
