
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `FormGenerationProgress` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model FormGenerationProgress
 * 
 */
export type FormGenerationProgressModel = runtime.Types.Result.DefaultSelection<Prisma.$FormGenerationProgressPayload>

export type AggregateFormGenerationProgress = {
  _count: FormGenerationProgressCountAggregateOutputType | null
  _avg: FormGenerationProgressAvgAggregateOutputType | null
  _sum: FormGenerationProgressSumAggregateOutputType | null
  _min: FormGenerationProgressMinAggregateOutputType | null
  _max: FormGenerationProgressMaxAggregateOutputType | null
}

export type FormGenerationProgressAvgAggregateOutputType = {
  progress: number | null
}

export type FormGenerationProgressSumAggregateOutputType = {
  progress: number | null
}

export type FormGenerationProgressMinAggregateOutputType = {
  id: string | null
  jobId: string | null
  status: $Enums.FormGenerationStatus | null
  progress: number | null
  message: string | null
  userId: string | null
  formId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type FormGenerationProgressMaxAggregateOutputType = {
  id: string | null
  jobId: string | null
  status: $Enums.FormGenerationStatus | null
  progress: number | null
  message: string | null
  userId: string | null
  formId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type FormGenerationProgressCountAggregateOutputType = {
  id: number
  jobId: number
  status: number
  progress: number
  message: number
  userId: number
  formId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type FormGenerationProgressAvgAggregateInputType = {
  progress?: true
}

export type FormGenerationProgressSumAggregateInputType = {
  progress?: true
}

export type FormGenerationProgressMinAggregateInputType = {
  id?: true
  jobId?: true
  status?: true
  progress?: true
  message?: true
  userId?: true
  formId?: true
  createdAt?: true
  updatedAt?: true
}

export type FormGenerationProgressMaxAggregateInputType = {
  id?: true
  jobId?: true
  status?: true
  progress?: true
  message?: true
  userId?: true
  formId?: true
  createdAt?: true
  updatedAt?: true
}

export type FormGenerationProgressCountAggregateInputType = {
  id?: true
  jobId?: true
  status?: true
  progress?: true
  message?: true
  userId?: true
  formId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type FormGenerationProgressAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which FormGenerationProgress to aggregate.
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of FormGenerationProgresses to fetch.
   */
  orderBy?: Prisma.FormGenerationProgressOrderByWithRelationInput | Prisma.FormGenerationProgressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.FormGenerationProgressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` FormGenerationProgresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` FormGenerationProgresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned FormGenerationProgresses
  **/
  _count?: true | FormGenerationProgressCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: FormGenerationProgressAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: FormGenerationProgressSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: FormGenerationProgressMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: FormGenerationProgressMaxAggregateInputType
}

export type GetFormGenerationProgressAggregateType<T extends FormGenerationProgressAggregateArgs> = {
      [P in keyof T & keyof AggregateFormGenerationProgress]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateFormGenerationProgress[P]>
    : Prisma.GetScalarType<T[P], AggregateFormGenerationProgress[P]>
}




export type FormGenerationProgressGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FormGenerationProgressWhereInput
  orderBy?: Prisma.FormGenerationProgressOrderByWithAggregationInput | Prisma.FormGenerationProgressOrderByWithAggregationInput[]
  by: Prisma.FormGenerationProgressScalarFieldEnum[] | Prisma.FormGenerationProgressScalarFieldEnum
  having?: Prisma.FormGenerationProgressScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: FormGenerationProgressCountAggregateInputType | true
  _avg?: FormGenerationProgressAvgAggregateInputType
  _sum?: FormGenerationProgressSumAggregateInputType
  _min?: FormGenerationProgressMinAggregateInputType
  _max?: FormGenerationProgressMaxAggregateInputType
}

export type FormGenerationProgressGroupByOutputType = {
  id: string
  jobId: string
  status: $Enums.FormGenerationStatus
  progress: number
  message: string | null
  userId: string
  formId: string | null
  createdAt: Date
  updatedAt: Date
  _count: FormGenerationProgressCountAggregateOutputType | null
  _avg: FormGenerationProgressAvgAggregateOutputType | null
  _sum: FormGenerationProgressSumAggregateOutputType | null
  _min: FormGenerationProgressMinAggregateOutputType | null
  _max: FormGenerationProgressMaxAggregateOutputType | null
}

type GetFormGenerationProgressGroupByPayload<T extends FormGenerationProgressGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<FormGenerationProgressGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof FormGenerationProgressGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], FormGenerationProgressGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], FormGenerationProgressGroupByOutputType[P]>
      }
    >
  >



export type FormGenerationProgressWhereInput = {
  AND?: Prisma.FormGenerationProgressWhereInput | Prisma.FormGenerationProgressWhereInput[]
  OR?: Prisma.FormGenerationProgressWhereInput[]
  NOT?: Prisma.FormGenerationProgressWhereInput | Prisma.FormGenerationProgressWhereInput[]
  id?: Prisma.UuidFilter<"FormGenerationProgress"> | string
  jobId?: Prisma.StringFilter<"FormGenerationProgress"> | string
  status?: Prisma.EnumFormGenerationStatusFilter<"FormGenerationProgress"> | $Enums.FormGenerationStatus
  progress?: Prisma.IntFilter<"FormGenerationProgress"> | number
  message?: Prisma.StringNullableFilter<"FormGenerationProgress"> | string | null
  userId?: Prisma.UuidFilter<"FormGenerationProgress"> | string
  formId?: Prisma.UuidNullableFilter<"FormGenerationProgress"> | string | null
  createdAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  form?: Prisma.XOR<Prisma.FormNullableScalarRelationFilter, Prisma.FormWhereInput> | null
}

export type FormGenerationProgressOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  jobId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  formId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  form?: Prisma.FormOrderByWithRelationInput
  _relevance?: Prisma.FormGenerationProgressOrderByRelevanceInput
}

export type FormGenerationProgressWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  jobId?: string
  AND?: Prisma.FormGenerationProgressWhereInput | Prisma.FormGenerationProgressWhereInput[]
  OR?: Prisma.FormGenerationProgressWhereInput[]
  NOT?: Prisma.FormGenerationProgressWhereInput | Prisma.FormGenerationProgressWhereInput[]
  status?: Prisma.EnumFormGenerationStatusFilter<"FormGenerationProgress"> | $Enums.FormGenerationStatus
  progress?: Prisma.IntFilter<"FormGenerationProgress"> | number
  message?: Prisma.StringNullableFilter<"FormGenerationProgress"> | string | null
  userId?: Prisma.UuidFilter<"FormGenerationProgress"> | string
  formId?: Prisma.UuidNullableFilter<"FormGenerationProgress"> | string | null
  createdAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  form?: Prisma.XOR<Prisma.FormNullableScalarRelationFilter, Prisma.FormWhereInput> | null
}, "id" | "jobId">

export type FormGenerationProgressOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  jobId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  formId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.FormGenerationProgressCountOrderByAggregateInput
  _avg?: Prisma.FormGenerationProgressAvgOrderByAggregateInput
  _max?: Prisma.FormGenerationProgressMaxOrderByAggregateInput
  _min?: Prisma.FormGenerationProgressMinOrderByAggregateInput
  _sum?: Prisma.FormGenerationProgressSumOrderByAggregateInput
}

export type FormGenerationProgressScalarWhereWithAggregatesInput = {
  AND?: Prisma.FormGenerationProgressScalarWhereWithAggregatesInput | Prisma.FormGenerationProgressScalarWhereWithAggregatesInput[]
  OR?: Prisma.FormGenerationProgressScalarWhereWithAggregatesInput[]
  NOT?: Prisma.FormGenerationProgressScalarWhereWithAggregatesInput | Prisma.FormGenerationProgressScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"FormGenerationProgress"> | string
  jobId?: Prisma.StringWithAggregatesFilter<"FormGenerationProgress"> | string
  status?: Prisma.EnumFormGenerationStatusWithAggregatesFilter<"FormGenerationProgress"> | $Enums.FormGenerationStatus
  progress?: Prisma.IntWithAggregatesFilter<"FormGenerationProgress"> | number
  message?: Prisma.StringNullableWithAggregatesFilter<"FormGenerationProgress"> | string | null
  userId?: Prisma.UuidWithAggregatesFilter<"FormGenerationProgress"> | string
  formId?: Prisma.UuidNullableWithAggregatesFilter<"FormGenerationProgress"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"FormGenerationProgress"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"FormGenerationProgress"> | Date | string
}

export type FormGenerationProgressCreateInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutFormGenerationProgressInput
  form?: Prisma.FormCreateNestedOneWithoutFormGenerationProgressInput
}

export type FormGenerationProgressUncheckedCreateInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  userId: string
  formId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutFormGenerationProgressNestedInput
  form?: Prisma.FormUpdateOneWithoutFormGenerationProgressNestedInput
}

export type FormGenerationProgressUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressCreateManyInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  userId: string
  formId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  formId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressListRelationFilter = {
  every?: Prisma.FormGenerationProgressWhereInput
  some?: Prisma.FormGenerationProgressWhereInput
  none?: Prisma.FormGenerationProgressWhereInput
}

export type FormGenerationProgressOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type FormGenerationProgressOrderByRelevanceInput = {
  fields: Prisma.FormGenerationProgressOrderByRelevanceFieldEnum | Prisma.FormGenerationProgressOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type FormGenerationProgressCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  jobId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  message?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type FormGenerationProgressAvgOrderByAggregateInput = {
  progress?: Prisma.SortOrder
}

export type FormGenerationProgressMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  jobId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  message?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type FormGenerationProgressMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  jobId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  message?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  formId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type FormGenerationProgressSumOrderByAggregateInput = {
  progress?: Prisma.SortOrder
}

export type FormGenerationProgressCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput> | Prisma.FormGenerationProgressCreateWithoutUserInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput | Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyUserInputEnvelope
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
}

export type FormGenerationProgressUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput> | Prisma.FormGenerationProgressCreateWithoutUserInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput | Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyUserInputEnvelope
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
}

export type FormGenerationProgressUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput> | Prisma.FormGenerationProgressCreateWithoutUserInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput | Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutUserInput | Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyUserInputEnvelope
  set?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  disconnect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  delete?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  update?: Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutUserInput | Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.FormGenerationProgressUpdateManyWithWhereWithoutUserInput | Prisma.FormGenerationProgressUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
}

export type FormGenerationProgressUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput> | Prisma.FormGenerationProgressCreateWithoutUserInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput | Prisma.FormGenerationProgressCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutUserInput | Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyUserInputEnvelope
  set?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  disconnect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  delete?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  update?: Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutUserInput | Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.FormGenerationProgressUpdateManyWithWhereWithoutUserInput | Prisma.FormGenerationProgressUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
}

export type FormGenerationProgressCreateNestedManyWithoutFormInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput> | Prisma.FormGenerationProgressCreateWithoutFormInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput | Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyFormInputEnvelope
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
}

export type FormGenerationProgressUncheckedCreateNestedManyWithoutFormInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput> | Prisma.FormGenerationProgressCreateWithoutFormInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput | Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyFormInputEnvelope
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
}

export type FormGenerationProgressUpdateManyWithoutFormNestedInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput> | Prisma.FormGenerationProgressCreateWithoutFormInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput | Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput[]
  upsert?: Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutFormInput | Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutFormInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyFormInputEnvelope
  set?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  disconnect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  delete?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  update?: Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutFormInput | Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutFormInput[]
  updateMany?: Prisma.FormGenerationProgressUpdateManyWithWhereWithoutFormInput | Prisma.FormGenerationProgressUpdateManyWithWhereWithoutFormInput[]
  deleteMany?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
}

export type FormGenerationProgressUncheckedUpdateManyWithoutFormNestedInput = {
  create?: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput> | Prisma.FormGenerationProgressCreateWithoutFormInput[] | Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput[]
  connectOrCreate?: Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput | Prisma.FormGenerationProgressCreateOrConnectWithoutFormInput[]
  upsert?: Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutFormInput | Prisma.FormGenerationProgressUpsertWithWhereUniqueWithoutFormInput[]
  createMany?: Prisma.FormGenerationProgressCreateManyFormInputEnvelope
  set?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  disconnect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  delete?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  connect?: Prisma.FormGenerationProgressWhereUniqueInput | Prisma.FormGenerationProgressWhereUniqueInput[]
  update?: Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutFormInput | Prisma.FormGenerationProgressUpdateWithWhereUniqueWithoutFormInput[]
  updateMany?: Prisma.FormGenerationProgressUpdateManyWithWhereWithoutFormInput | Prisma.FormGenerationProgressUpdateManyWithWhereWithoutFormInput[]
  deleteMany?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
}

export type EnumFormGenerationStatusFieldUpdateOperationsInput = {
  set?: $Enums.FormGenerationStatus
}

export type FormGenerationProgressCreateWithoutUserInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  form?: Prisma.FormCreateNestedOneWithoutFormGenerationProgressInput
}

export type FormGenerationProgressUncheckedCreateWithoutUserInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  formId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressCreateOrConnectWithoutUserInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  create: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput>
}

export type FormGenerationProgressCreateManyUserInputEnvelope = {
  data: Prisma.FormGenerationProgressCreateManyUserInput | Prisma.FormGenerationProgressCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type FormGenerationProgressUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  update: Prisma.XOR<Prisma.FormGenerationProgressUpdateWithoutUserInput, Prisma.FormGenerationProgressUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutUserInput, Prisma.FormGenerationProgressUncheckedCreateWithoutUserInput>
}

export type FormGenerationProgressUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateWithoutUserInput, Prisma.FormGenerationProgressUncheckedUpdateWithoutUserInput>
}

export type FormGenerationProgressUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.FormGenerationProgressScalarWhereInput
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateManyMutationInput, Prisma.FormGenerationProgressUncheckedUpdateManyWithoutUserInput>
}

export type FormGenerationProgressScalarWhereInput = {
  AND?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
  OR?: Prisma.FormGenerationProgressScalarWhereInput[]
  NOT?: Prisma.FormGenerationProgressScalarWhereInput | Prisma.FormGenerationProgressScalarWhereInput[]
  id?: Prisma.UuidFilter<"FormGenerationProgress"> | string
  jobId?: Prisma.StringFilter<"FormGenerationProgress"> | string
  status?: Prisma.EnumFormGenerationStatusFilter<"FormGenerationProgress"> | $Enums.FormGenerationStatus
  progress?: Prisma.IntFilter<"FormGenerationProgress"> | number
  message?: Prisma.StringNullableFilter<"FormGenerationProgress"> | string | null
  userId?: Prisma.UuidFilter<"FormGenerationProgress"> | string
  formId?: Prisma.UuidNullableFilter<"FormGenerationProgress"> | string | null
  createdAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"FormGenerationProgress"> | Date | string
}

export type FormGenerationProgressCreateWithoutFormInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutFormGenerationProgressInput
}

export type FormGenerationProgressUncheckedCreateWithoutFormInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressCreateOrConnectWithoutFormInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  create: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput>
}

export type FormGenerationProgressCreateManyFormInputEnvelope = {
  data: Prisma.FormGenerationProgressCreateManyFormInput | Prisma.FormGenerationProgressCreateManyFormInput[]
  skipDuplicates?: boolean
}

export type FormGenerationProgressUpsertWithWhereUniqueWithoutFormInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  update: Prisma.XOR<Prisma.FormGenerationProgressUpdateWithoutFormInput, Prisma.FormGenerationProgressUncheckedUpdateWithoutFormInput>
  create: Prisma.XOR<Prisma.FormGenerationProgressCreateWithoutFormInput, Prisma.FormGenerationProgressUncheckedCreateWithoutFormInput>
}

export type FormGenerationProgressUpdateWithWhereUniqueWithoutFormInput = {
  where: Prisma.FormGenerationProgressWhereUniqueInput
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateWithoutFormInput, Prisma.FormGenerationProgressUncheckedUpdateWithoutFormInput>
}

export type FormGenerationProgressUpdateManyWithWhereWithoutFormInput = {
  where: Prisma.FormGenerationProgressScalarWhereInput
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateManyMutationInput, Prisma.FormGenerationProgressUncheckedUpdateManyWithoutFormInput>
}

export type FormGenerationProgressCreateManyUserInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  formId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  form?: Prisma.FormUpdateOneWithoutFormGenerationProgressNestedInput
}

export type FormGenerationProgressUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  formId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  formId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressCreateManyFormInput = {
  id?: string
  jobId: string
  status?: $Enums.FormGenerationStatus
  progress?: number
  message?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type FormGenerationProgressUpdateWithoutFormInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutFormGenerationProgressNestedInput
}

export type FormGenerationProgressUncheckedUpdateWithoutFormInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FormGenerationProgressUncheckedUpdateManyWithoutFormInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jobId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumFormGenerationStatusFieldUpdateOperationsInput | $Enums.FormGenerationStatus
  progress?: Prisma.IntFieldUpdateOperationsInput | number
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type FormGenerationProgressSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  jobId?: boolean
  status?: boolean
  progress?: boolean
  message?: boolean
  userId?: boolean
  formId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}, ExtArgs["result"]["formGenerationProgress"]>

export type FormGenerationProgressSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  jobId?: boolean
  status?: boolean
  progress?: boolean
  message?: boolean
  userId?: boolean
  formId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}, ExtArgs["result"]["formGenerationProgress"]>

export type FormGenerationProgressSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  jobId?: boolean
  status?: boolean
  progress?: boolean
  message?: boolean
  userId?: boolean
  formId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}, ExtArgs["result"]["formGenerationProgress"]>

export type FormGenerationProgressSelectScalar = {
  id?: boolean
  jobId?: boolean
  status?: boolean
  progress?: boolean
  message?: boolean
  userId?: boolean
  formId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type FormGenerationProgressOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "jobId" | "status" | "progress" | "message" | "userId" | "formId" | "createdAt" | "updatedAt", ExtArgs["result"]["formGenerationProgress"]>
export type FormGenerationProgressInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}
export type FormGenerationProgressIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}
export type FormGenerationProgressIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  form?: boolean | Prisma.FormGenerationProgress$formArgs<ExtArgs>
}

export type $FormGenerationProgressPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "FormGenerationProgress"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    form: Prisma.$FormPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    jobId: string
    status: $Enums.FormGenerationStatus
    progress: number
    message: string | null
    userId: string
    formId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["formGenerationProgress"]>
  composites: {}
}

export type FormGenerationProgressGetPayload<S extends boolean | null | undefined | FormGenerationProgressDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload, S>

export type FormGenerationProgressCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<FormGenerationProgressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: FormGenerationProgressCountAggregateInputType | true
  }

export interface FormGenerationProgressDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FormGenerationProgress'], meta: { name: 'FormGenerationProgress' } }
  /**
   * Find zero or one FormGenerationProgress that matches the filter.
   * @param {FormGenerationProgressFindUniqueArgs} args - Arguments to find a FormGenerationProgress
   * @example
   * // Get one FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends FormGenerationProgressFindUniqueArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressFindUniqueArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one FormGenerationProgress that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {FormGenerationProgressFindUniqueOrThrowArgs} args - Arguments to find a FormGenerationProgress
   * @example
   * // Get one FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends FormGenerationProgressFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first FormGenerationProgress that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressFindFirstArgs} args - Arguments to find a FormGenerationProgress
   * @example
   * // Get one FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends FormGenerationProgressFindFirstArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressFindFirstArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first FormGenerationProgress that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressFindFirstOrThrowArgs} args - Arguments to find a FormGenerationProgress
   * @example
   * // Get one FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends FormGenerationProgressFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more FormGenerationProgresses that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all FormGenerationProgresses
   * const formGenerationProgresses = await prisma.formGenerationProgress.findMany()
   * 
   * // Get first 10 FormGenerationProgresses
   * const formGenerationProgresses = await prisma.formGenerationProgress.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const formGenerationProgressWithIdOnly = await prisma.formGenerationProgress.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends FormGenerationProgressFindManyArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a FormGenerationProgress.
   * @param {FormGenerationProgressCreateArgs} args - Arguments to create a FormGenerationProgress.
   * @example
   * // Create one FormGenerationProgress
   * const FormGenerationProgress = await prisma.formGenerationProgress.create({
   *   data: {
   *     // ... data to create a FormGenerationProgress
   *   }
   * })
   * 
   */
  create<T extends FormGenerationProgressCreateArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressCreateArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many FormGenerationProgresses.
   * @param {FormGenerationProgressCreateManyArgs} args - Arguments to create many FormGenerationProgresses.
   * @example
   * // Create many FormGenerationProgresses
   * const formGenerationProgress = await prisma.formGenerationProgress.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends FormGenerationProgressCreateManyArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many FormGenerationProgresses and returns the data saved in the database.
   * @param {FormGenerationProgressCreateManyAndReturnArgs} args - Arguments to create many FormGenerationProgresses.
   * @example
   * // Create many FormGenerationProgresses
   * const formGenerationProgress = await prisma.formGenerationProgress.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many FormGenerationProgresses and only return the `id`
   * const formGenerationProgressWithIdOnly = await prisma.formGenerationProgress.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends FormGenerationProgressCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a FormGenerationProgress.
   * @param {FormGenerationProgressDeleteArgs} args - Arguments to delete one FormGenerationProgress.
   * @example
   * // Delete one FormGenerationProgress
   * const FormGenerationProgress = await prisma.formGenerationProgress.delete({
   *   where: {
   *     // ... filter to delete one FormGenerationProgress
   *   }
   * })
   * 
   */
  delete<T extends FormGenerationProgressDeleteArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressDeleteArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one FormGenerationProgress.
   * @param {FormGenerationProgressUpdateArgs} args - Arguments to update one FormGenerationProgress.
   * @example
   * // Update one FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends FormGenerationProgressUpdateArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressUpdateArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more FormGenerationProgresses.
   * @param {FormGenerationProgressDeleteManyArgs} args - Arguments to filter FormGenerationProgresses to delete.
   * @example
   * // Delete a few FormGenerationProgresses
   * const { count } = await prisma.formGenerationProgress.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends FormGenerationProgressDeleteManyArgs>(args?: Prisma.SelectSubset<T, FormGenerationProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more FormGenerationProgresses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many FormGenerationProgresses
   * const formGenerationProgress = await prisma.formGenerationProgress.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends FormGenerationProgressUpdateManyArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more FormGenerationProgresses and returns the data updated in the database.
   * @param {FormGenerationProgressUpdateManyAndReturnArgs} args - Arguments to update many FormGenerationProgresses.
   * @example
   * // Update many FormGenerationProgresses
   * const formGenerationProgress = await prisma.formGenerationProgress.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more FormGenerationProgresses and only return the `id`
   * const formGenerationProgressWithIdOnly = await prisma.formGenerationProgress.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends FormGenerationProgressUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one FormGenerationProgress.
   * @param {FormGenerationProgressUpsertArgs} args - Arguments to update or create a FormGenerationProgress.
   * @example
   * // Update or create a FormGenerationProgress
   * const formGenerationProgress = await prisma.formGenerationProgress.upsert({
   *   create: {
   *     // ... data to create a FormGenerationProgress
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the FormGenerationProgress we want to update
   *   }
   * })
   */
  upsert<T extends FormGenerationProgressUpsertArgs>(args: Prisma.SelectSubset<T, FormGenerationProgressUpsertArgs<ExtArgs>>): Prisma.Prisma__FormGenerationProgressClient<runtime.Types.Result.GetResult<Prisma.$FormGenerationProgressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of FormGenerationProgresses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressCountArgs} args - Arguments to filter FormGenerationProgresses to count.
   * @example
   * // Count the number of FormGenerationProgresses
   * const count = await prisma.formGenerationProgress.count({
   *   where: {
   *     // ... the filter for the FormGenerationProgresses we want to count
   *   }
   * })
  **/
  count<T extends FormGenerationProgressCountArgs>(
    args?: Prisma.Subset<T, FormGenerationProgressCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], FormGenerationProgressCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a FormGenerationProgress.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends FormGenerationProgressAggregateArgs>(args: Prisma.Subset<T, FormGenerationProgressAggregateArgs>): Prisma.PrismaPromise<GetFormGenerationProgressAggregateType<T>>

  /**
   * Group by FormGenerationProgress.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FormGenerationProgressGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends FormGenerationProgressGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: FormGenerationProgressGroupByArgs['orderBy'] }
      : { orderBy?: FormGenerationProgressGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, FormGenerationProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormGenerationProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the FormGenerationProgress model
 */
readonly fields: FormGenerationProgressFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for FormGenerationProgress.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__FormGenerationProgressClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  form<T extends Prisma.FormGenerationProgress$formArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.FormGenerationProgress$formArgs<ExtArgs>>): Prisma.Prisma__FormClient<runtime.Types.Result.GetResult<Prisma.$FormPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the FormGenerationProgress model
 */
export interface FormGenerationProgressFieldRefs {
  readonly id: Prisma.FieldRef<"FormGenerationProgress", 'String'>
  readonly jobId: Prisma.FieldRef<"FormGenerationProgress", 'String'>
  readonly status: Prisma.FieldRef<"FormGenerationProgress", 'FormGenerationStatus'>
  readonly progress: Prisma.FieldRef<"FormGenerationProgress", 'Int'>
  readonly message: Prisma.FieldRef<"FormGenerationProgress", 'String'>
  readonly userId: Prisma.FieldRef<"FormGenerationProgress", 'String'>
  readonly formId: Prisma.FieldRef<"FormGenerationProgress", 'String'>
  readonly createdAt: Prisma.FieldRef<"FormGenerationProgress", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"FormGenerationProgress", 'DateTime'>
}
    

// Custom InputTypes
/**
 * FormGenerationProgress findUnique
 */
export type FormGenerationProgressFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter, which FormGenerationProgress to fetch.
   */
  where: Prisma.FormGenerationProgressWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress findUniqueOrThrow
 */
export type FormGenerationProgressFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter, which FormGenerationProgress to fetch.
   */
  where: Prisma.FormGenerationProgressWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress findFirst
 */
export type FormGenerationProgressFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter, which FormGenerationProgress to fetch.
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of FormGenerationProgresses to fetch.
   */
  orderBy?: Prisma.FormGenerationProgressOrderByWithRelationInput | Prisma.FormGenerationProgressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for FormGenerationProgresses.
   */
  cursor?: Prisma.FormGenerationProgressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` FormGenerationProgresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` FormGenerationProgresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of FormGenerationProgresses.
   */
  distinct?: Prisma.FormGenerationProgressScalarFieldEnum | Prisma.FormGenerationProgressScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress findFirstOrThrow
 */
export type FormGenerationProgressFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter, which FormGenerationProgress to fetch.
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of FormGenerationProgresses to fetch.
   */
  orderBy?: Prisma.FormGenerationProgressOrderByWithRelationInput | Prisma.FormGenerationProgressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for FormGenerationProgresses.
   */
  cursor?: Prisma.FormGenerationProgressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` FormGenerationProgresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` FormGenerationProgresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of FormGenerationProgresses.
   */
  distinct?: Prisma.FormGenerationProgressScalarFieldEnum | Prisma.FormGenerationProgressScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress findMany
 */
export type FormGenerationProgressFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter, which FormGenerationProgresses to fetch.
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of FormGenerationProgresses to fetch.
   */
  orderBy?: Prisma.FormGenerationProgressOrderByWithRelationInput | Prisma.FormGenerationProgressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing FormGenerationProgresses.
   */
  cursor?: Prisma.FormGenerationProgressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` FormGenerationProgresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` FormGenerationProgresses.
   */
  skip?: number
  distinct?: Prisma.FormGenerationProgressScalarFieldEnum | Prisma.FormGenerationProgressScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress create
 */
export type FormGenerationProgressCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * The data needed to create a FormGenerationProgress.
   */
  data: Prisma.XOR<Prisma.FormGenerationProgressCreateInput, Prisma.FormGenerationProgressUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress createMany
 */
export type FormGenerationProgressCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many FormGenerationProgresses.
   */
  data: Prisma.FormGenerationProgressCreateManyInput | Prisma.FormGenerationProgressCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * FormGenerationProgress createManyAndReturn
 */
export type FormGenerationProgressCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * The data used to create many FormGenerationProgresses.
   */
  data: Prisma.FormGenerationProgressCreateManyInput | Prisma.FormGenerationProgressCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * FormGenerationProgress update
 */
export type FormGenerationProgressUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * The data needed to update a FormGenerationProgress.
   */
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateInput, Prisma.FormGenerationProgressUncheckedUpdateInput>
  /**
   * Choose, which FormGenerationProgress to update.
   */
  where: Prisma.FormGenerationProgressWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress updateMany
 */
export type FormGenerationProgressUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update FormGenerationProgresses.
   */
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateManyMutationInput, Prisma.FormGenerationProgressUncheckedUpdateManyInput>
  /**
   * Filter which FormGenerationProgresses to update
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * Limit how many FormGenerationProgresses to update.
   */
  limit?: number
}

/**
 * FormGenerationProgress updateManyAndReturn
 */
export type FormGenerationProgressUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * The data used to update FormGenerationProgresses.
   */
  data: Prisma.XOR<Prisma.FormGenerationProgressUpdateManyMutationInput, Prisma.FormGenerationProgressUncheckedUpdateManyInput>
  /**
   * Filter which FormGenerationProgresses to update
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * Limit how many FormGenerationProgresses to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * FormGenerationProgress upsert
 */
export type FormGenerationProgressUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * The filter to search for the FormGenerationProgress to update in case it exists.
   */
  where: Prisma.FormGenerationProgressWhereUniqueInput
  /**
   * In case the FormGenerationProgress found by the `where` argument doesn't exist, create a new FormGenerationProgress with this data.
   */
  create: Prisma.XOR<Prisma.FormGenerationProgressCreateInput, Prisma.FormGenerationProgressUncheckedCreateInput>
  /**
   * In case the FormGenerationProgress was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.FormGenerationProgressUpdateInput, Prisma.FormGenerationProgressUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress delete
 */
export type FormGenerationProgressDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
  /**
   * Filter which FormGenerationProgress to delete.
   */
  where: Prisma.FormGenerationProgressWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * FormGenerationProgress deleteMany
 */
export type FormGenerationProgressDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which FormGenerationProgresses to delete
   */
  where?: Prisma.FormGenerationProgressWhereInput
  /**
   * Limit how many FormGenerationProgresses to delete.
   */
  limit?: number
}

/**
 * FormGenerationProgress.form
 */
export type FormGenerationProgress$formArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Form
   */
  select?: Prisma.FormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Form
   */
  omit?: Prisma.FormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormInclude<ExtArgs> | null
  where?: Prisma.FormWhereInput
}

/**
 * FormGenerationProgress without action
 */
export type FormGenerationProgressDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormGenerationProgress
   */
  select?: Prisma.FormGenerationProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormGenerationProgress
   */
  omit?: Prisma.FormGenerationProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormGenerationProgressInclude<ExtArgs> | null
}
