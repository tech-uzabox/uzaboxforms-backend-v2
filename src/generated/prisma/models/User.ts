
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserMinAggregateOutputType = {
  id: string | null
  email: string | null
  password: string | null
  firstName: string | null
  lastName: string | null
  photo: string | null
  googleId: string | null
  status: $Enums.UserStatus | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserMaxAggregateOutputType = {
  id: string | null
  email: string | null
  password: string | null
  firstName: string | null
  lastName: string | null
  photo: string | null
  googleId: string | null
  status: $Enums.UserStatus | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  email: number
  password: number
  firstName: number
  lastName: number
  photo: number
  googleId: number
  status: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type UserMinAggregateInputType = {
  id?: true
  email?: true
  password?: true
  firstName?: true
  lastName?: true
  photo?: true
  googleId?: true
  status?: true
  createdAt?: true
  updatedAt?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  email?: true
  password?: true
  firstName?: true
  lastName?: true
  photo?: true
  googleId?: true
  status?: true
  createdAt?: true
  updatedAt?: true
}

export type UserCountAggregateInputType = {
  id?: true
  email?: true
  password?: true
  firstName?: true
  lastName?: true
  photo?: true
  googleId?: true
  status?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: string
  email: string
  password: string
  firstName: string | null
  lastName: string | null
  photo: string | null
  googleId: string | null
  status: $Enums.UserStatus
  createdAt: Date
  updatedAt: Date
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  >



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.UuidFilter<"User"> | string
  email?: Prisma.StringFilter<"User"> | string
  password?: Prisma.StringFilter<"User"> | string
  firstName?: Prisma.StringNullableFilter<"User"> | string | null
  lastName?: Prisma.StringNullableFilter<"User"> | string | null
  photo?: Prisma.StringNullableFilter<"User"> | string | null
  googleId?: Prisma.StringNullableFilter<"User"> | string | null
  status?: Prisma.EnumUserStatusFilter<"User"> | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  applicantProcesses?: Prisma.ApplicantProcessListRelationFilter
  auditLogs?: Prisma.AuditLogListRelationFilter
  files?: Prisma.FileListRelationFilter
  createdForms?: Prisma.FormListRelationFilter
  createdFolders?: Prisma.FolderListRelationFilter
  createdGroups?: Prisma.GroupListRelationFilter
  organization?: Prisma.XOR<Prisma.OrganizationUserNullableScalarRelationFilter, Prisma.OrganizationUserWhereInput> | null
  createdProcesses?: Prisma.ProcessListRelationFilter
  processedApplications?: Prisma.ProcessedApplicationListRelationFilter
  qrCodeDocuments?: Prisma.QrCodeDocumentListRelationFilter
  roles?: Prisma.UserRoleListRelationFilter
  ownedDashboards?: Prisma.DashboardListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder
  photo?: Prisma.SortOrderInput | Prisma.SortOrder
  googleId?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  applicantProcesses?: Prisma.ApplicantProcessOrderByRelationAggregateInput
  auditLogs?: Prisma.AuditLogOrderByRelationAggregateInput
  files?: Prisma.FileOrderByRelationAggregateInput
  createdForms?: Prisma.FormOrderByRelationAggregateInput
  createdFolders?: Prisma.FolderOrderByRelationAggregateInput
  createdGroups?: Prisma.GroupOrderByRelationAggregateInput
  organization?: Prisma.OrganizationUserOrderByWithRelationInput
  createdProcesses?: Prisma.ProcessOrderByRelationAggregateInput
  processedApplications?: Prisma.ProcessedApplicationOrderByRelationAggregateInput
  qrCodeDocuments?: Prisma.QrCodeDocumentOrderByRelationAggregateInput
  roles?: Prisma.UserRoleOrderByRelationAggregateInput
  ownedDashboards?: Prisma.DashboardOrderByRelationAggregateInput
  _relevance?: Prisma.UserOrderByRelevanceInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  email?: string
  googleId?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  password?: Prisma.StringFilter<"User"> | string
  firstName?: Prisma.StringNullableFilter<"User"> | string | null
  lastName?: Prisma.StringNullableFilter<"User"> | string | null
  photo?: Prisma.StringNullableFilter<"User"> | string | null
  status?: Prisma.EnumUserStatusFilter<"User"> | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  applicantProcesses?: Prisma.ApplicantProcessListRelationFilter
  auditLogs?: Prisma.AuditLogListRelationFilter
  files?: Prisma.FileListRelationFilter
  createdForms?: Prisma.FormListRelationFilter
  createdFolders?: Prisma.FolderListRelationFilter
  createdGroups?: Prisma.GroupListRelationFilter
  organization?: Prisma.XOR<Prisma.OrganizationUserNullableScalarRelationFilter, Prisma.OrganizationUserWhereInput> | null
  createdProcesses?: Prisma.ProcessListRelationFilter
  processedApplications?: Prisma.ProcessedApplicationListRelationFilter
  qrCodeDocuments?: Prisma.QrCodeDocumentListRelationFilter
  roles?: Prisma.UserRoleListRelationFilter
  ownedDashboards?: Prisma.DashboardListRelationFilter
}, "id" | "email" | "googleId">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder
  photo?: Prisma.SortOrderInput | Prisma.SortOrder
  googleId?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"User"> | string
  email?: Prisma.StringWithAggregatesFilter<"User"> | string
  password?: Prisma.StringWithAggregatesFilter<"User"> | string
  firstName?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  lastName?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  photo?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  googleId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  status?: Prisma.EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
}

export type UserCreateInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateManyInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserOrderByRelevanceInput = {
  fields: Prisma.UserOrderByRelevanceFieldEnum | Prisma.UserOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  photo?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  photo?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  photo?: Prisma.SortOrder
  googleId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type EnumUserStatusFieldUpdateOperationsInput = {
  set?: $Enums.UserStatus
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type UserCreateNestedOneWithoutRolesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRolesInput, Prisma.UserUncheckedCreateWithoutRolesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRolesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutRolesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRolesInput, Prisma.UserUncheckedCreateWithoutRolesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRolesInput
  upsert?: Prisma.UserUpsertWithoutRolesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRolesInput, Prisma.UserUpdateWithoutRolesInput>, Prisma.UserUncheckedUpdateWithoutRolesInput>
}

export type UserCreateNestedOneWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFilesInput, Prisma.UserUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFilesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFilesInput, Prisma.UserUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFilesInput
  upsert?: Prisma.UserUpsertWithoutFilesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutFilesInput, Prisma.UserUpdateWithoutFilesInput>, Prisma.UserUncheckedUpdateWithoutFilesInput>
}

export type UserCreateNestedOneWithoutAuditLogsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuditLogsInput, Prisma.UserUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuditLogsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutAuditLogsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuditLogsInput, Prisma.UserUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuditLogsInput
  upsert?: Prisma.UserUpsertWithoutAuditLogsInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAuditLogsInput, Prisma.UserUpdateWithoutAuditLogsInput>, Prisma.UserUncheckedUpdateWithoutAuditLogsInput>
}

export type UserCreateNestedOneWithoutCreatedGroupsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedGroupsInput, Prisma.UserUncheckedCreateWithoutCreatedGroupsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedGroupsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutCreatedGroupsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedGroupsInput, Prisma.UserUncheckedCreateWithoutCreatedGroupsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedGroupsInput
  upsert?: Prisma.UserUpsertWithoutCreatedGroupsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutCreatedGroupsInput, Prisma.UserUpdateWithoutCreatedGroupsInput>, Prisma.UserUncheckedUpdateWithoutCreatedGroupsInput>
}

export type UserCreateNestedOneWithoutCreatedProcessesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedProcessesInput, Prisma.UserUncheckedCreateWithoutCreatedProcessesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedProcessesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutCreatedProcessesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedProcessesInput, Prisma.UserUncheckedCreateWithoutCreatedProcessesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedProcessesInput
  upsert?: Prisma.UserUpsertWithoutCreatedProcessesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutCreatedProcessesInput, Prisma.UserUpdateWithoutCreatedProcessesInput>, Prisma.UserUncheckedUpdateWithoutCreatedProcessesInput>
}

export type UserCreateNestedOneWithoutCreatedFoldersInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedFoldersInput, Prisma.UserUncheckedCreateWithoutCreatedFoldersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedFoldersInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutCreatedFoldersNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedFoldersInput, Prisma.UserUncheckedCreateWithoutCreatedFoldersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedFoldersInput
  upsert?: Prisma.UserUpsertWithoutCreatedFoldersInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutCreatedFoldersInput, Prisma.UserUpdateWithoutCreatedFoldersInput>, Prisma.UserUncheckedUpdateWithoutCreatedFoldersInput>
}

export type UserCreateNestedOneWithoutCreatedFormsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedFormsInput, Prisma.UserUncheckedCreateWithoutCreatedFormsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedFormsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutCreatedFormsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutCreatedFormsInput, Prisma.UserUncheckedCreateWithoutCreatedFormsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedFormsInput
  upsert?: Prisma.UserUpsertWithoutCreatedFormsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutCreatedFormsInput, Prisma.UserUpdateWithoutCreatedFormsInput>, Prisma.UserUncheckedUpdateWithoutCreatedFormsInput>
}

export type UserCreateNestedOneWithoutApplicantProcessesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutApplicantProcessesInput, Prisma.UserUncheckedCreateWithoutApplicantProcessesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutApplicantProcessesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutApplicantProcessesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutApplicantProcessesInput, Prisma.UserUncheckedCreateWithoutApplicantProcessesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutApplicantProcessesInput
  upsert?: Prisma.UserUpsertWithoutApplicantProcessesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutApplicantProcessesInput, Prisma.UserUpdateWithoutApplicantProcessesInput>, Prisma.UserUncheckedUpdateWithoutApplicantProcessesInput>
}

export type UserCreateNestedOneWithoutProcessedApplicationsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProcessedApplicationsInput, Prisma.UserUncheckedCreateWithoutProcessedApplicationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProcessedApplicationsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutProcessedApplicationsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProcessedApplicationsInput, Prisma.UserUncheckedCreateWithoutProcessedApplicationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProcessedApplicationsInput
  upsert?: Prisma.UserUpsertWithoutProcessedApplicationsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutProcessedApplicationsInput, Prisma.UserUpdateWithoutProcessedApplicationsInput>, Prisma.UserUncheckedUpdateWithoutProcessedApplicationsInput>
}

export type UserCreateNestedOneWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOrganizationInput, Prisma.UserUncheckedCreateWithoutOrganizationInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOrganizationInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOrganizationInput, Prisma.UserUncheckedCreateWithoutOrganizationInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOrganizationInput
  upsert?: Prisma.UserUpsertWithoutOrganizationInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutOrganizationInput, Prisma.UserUpdateWithoutOrganizationInput>, Prisma.UserUncheckedUpdateWithoutOrganizationInput>
}

export type UserCreateNestedOneWithoutOwnedDashboardsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOwnedDashboardsInput, Prisma.UserUncheckedCreateWithoutOwnedDashboardsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOwnedDashboardsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutOwnedDashboardsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOwnedDashboardsInput, Prisma.UserUncheckedCreateWithoutOwnedDashboardsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOwnedDashboardsInput
  upsert?: Prisma.UserUpsertWithoutOwnedDashboardsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutOwnedDashboardsInput, Prisma.UserUpdateWithoutOwnedDashboardsInput>, Prisma.UserUncheckedUpdateWithoutOwnedDashboardsInput>
}

export type UserCreateNestedOneWithoutQrCodeDocumentsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedCreateWithoutQrCodeDocumentsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutQrCodeDocumentsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutQrCodeDocumentsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedCreateWithoutQrCodeDocumentsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutQrCodeDocumentsInput
  upsert?: Prisma.UserUpsertWithoutQrCodeDocumentsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutQrCodeDocumentsInput, Prisma.UserUpdateWithoutQrCodeDocumentsInput>, Prisma.UserUncheckedUpdateWithoutQrCodeDocumentsInput>
}

export type UserCreateWithoutRolesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutRolesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutRolesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRolesInput, Prisma.UserUncheckedCreateWithoutRolesInput>
}

export type UserUpsertWithoutRolesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRolesInput, Prisma.UserUncheckedUpdateWithoutRolesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRolesInput, Prisma.UserUncheckedCreateWithoutRolesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRolesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRolesInput, Prisma.UserUncheckedUpdateWithoutRolesInput>
}

export type UserUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutFilesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutFilesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutFilesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutFilesInput, Prisma.UserUncheckedCreateWithoutFilesInput>
}

export type UserUpsertWithoutFilesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutFilesInput, Prisma.UserUncheckedUpdateWithoutFilesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutFilesInput, Prisma.UserUncheckedCreateWithoutFilesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutFilesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutFilesInput, Prisma.UserUncheckedUpdateWithoutFilesInput>
}

export type UserUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutFilesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutAuditLogsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutAuditLogsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutAuditLogsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAuditLogsInput, Prisma.UserUncheckedCreateWithoutAuditLogsInput>
}

export type UserUpsertWithoutAuditLogsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAuditLogsInput, Prisma.UserUncheckedUpdateWithoutAuditLogsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAuditLogsInput, Prisma.UserUncheckedCreateWithoutAuditLogsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAuditLogsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAuditLogsInput, Prisma.UserUncheckedUpdateWithoutAuditLogsInput>
}

export type UserUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutCreatedGroupsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutCreatedGroupsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutCreatedGroupsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedGroupsInput, Prisma.UserUncheckedCreateWithoutCreatedGroupsInput>
}

export type UserUpsertWithoutCreatedGroupsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutCreatedGroupsInput, Prisma.UserUncheckedUpdateWithoutCreatedGroupsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedGroupsInput, Prisma.UserUncheckedCreateWithoutCreatedGroupsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutCreatedGroupsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutCreatedGroupsInput, Prisma.UserUncheckedUpdateWithoutCreatedGroupsInput>
}

export type UserUpdateWithoutCreatedGroupsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutCreatedGroupsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutCreatedProcessesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutCreatedProcessesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutCreatedProcessesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedProcessesInput, Prisma.UserUncheckedCreateWithoutCreatedProcessesInput>
}

export type UserUpsertWithoutCreatedProcessesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutCreatedProcessesInput, Prisma.UserUncheckedUpdateWithoutCreatedProcessesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedProcessesInput, Prisma.UserUncheckedCreateWithoutCreatedProcessesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutCreatedProcessesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutCreatedProcessesInput, Prisma.UserUncheckedUpdateWithoutCreatedProcessesInput>
}

export type UserUpdateWithoutCreatedProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutCreatedProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutCreatedFoldersInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutCreatedFoldersInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutCreatedFoldersInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedFoldersInput, Prisma.UserUncheckedCreateWithoutCreatedFoldersInput>
}

export type UserUpsertWithoutCreatedFoldersInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutCreatedFoldersInput, Prisma.UserUncheckedUpdateWithoutCreatedFoldersInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedFoldersInput, Prisma.UserUncheckedCreateWithoutCreatedFoldersInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutCreatedFoldersInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutCreatedFoldersInput, Prisma.UserUncheckedUpdateWithoutCreatedFoldersInput>
}

export type UserUpdateWithoutCreatedFoldersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutCreatedFoldersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutCreatedFormsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutCreatedFormsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutCreatedFormsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedFormsInput, Prisma.UserUncheckedCreateWithoutCreatedFormsInput>
}

export type UserUpsertWithoutCreatedFormsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutCreatedFormsInput, Prisma.UserUncheckedUpdateWithoutCreatedFormsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutCreatedFormsInput, Prisma.UserUncheckedCreateWithoutCreatedFormsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutCreatedFormsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutCreatedFormsInput, Prisma.UserUncheckedUpdateWithoutCreatedFormsInput>
}

export type UserUpdateWithoutCreatedFormsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutCreatedFormsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutApplicantProcessesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutApplicantProcessesInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutApplicantProcessesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutApplicantProcessesInput, Prisma.UserUncheckedCreateWithoutApplicantProcessesInput>
}

export type UserUpsertWithoutApplicantProcessesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutApplicantProcessesInput, Prisma.UserUncheckedUpdateWithoutApplicantProcessesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutApplicantProcessesInput, Prisma.UserUncheckedCreateWithoutApplicantProcessesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutApplicantProcessesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutApplicantProcessesInput, Prisma.UserUncheckedUpdateWithoutApplicantProcessesInput>
}

export type UserUpdateWithoutApplicantProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutApplicantProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutProcessedApplicationsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutProcessedApplicationsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutProcessedApplicationsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutProcessedApplicationsInput, Prisma.UserUncheckedCreateWithoutProcessedApplicationsInput>
}

export type UserUpsertWithoutProcessedApplicationsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutProcessedApplicationsInput, Prisma.UserUncheckedUpdateWithoutProcessedApplicationsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutProcessedApplicationsInput, Prisma.UserUncheckedCreateWithoutProcessedApplicationsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutProcessedApplicationsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutProcessedApplicationsInput, Prisma.UserUncheckedUpdateWithoutProcessedApplicationsInput>
}

export type UserUpdateWithoutProcessedApplicationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutProcessedApplicationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutOrganizationInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutOrganizationInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutOrganizationInput, Prisma.UserUncheckedCreateWithoutOrganizationInput>
}

export type UserUpsertWithoutOrganizationInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutOrganizationInput, Prisma.UserUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutOrganizationInput, Prisma.UserUncheckedCreateWithoutOrganizationInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutOrganizationInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutOrganizationInput, Prisma.UserUncheckedUpdateWithoutOrganizationInput>
}

export type UserUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}

export type UserCreateWithoutOwnedDashboardsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutOwnedDashboardsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedCreateNestedManyWithoutCreatorInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutOwnedDashboardsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutOwnedDashboardsInput, Prisma.UserUncheckedCreateWithoutOwnedDashboardsInput>
}

export type UserUpsertWithoutOwnedDashboardsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutOwnedDashboardsInput, Prisma.UserUncheckedUpdateWithoutOwnedDashboardsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutOwnedDashboardsInput, Prisma.UserUncheckedCreateWithoutOwnedDashboardsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutOwnedDashboardsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutOwnedDashboardsInput, Prisma.UserUncheckedUpdateWithoutOwnedDashboardsInput>
}

export type UserUpdateWithoutOwnedDashboardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutOwnedDashboardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  qrCodeDocuments?: Prisma.QrCodeDocumentUncheckedUpdateManyWithoutCreatorNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutQrCodeDocumentsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutUserInput
  files?: Prisma.FileCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutUserInput
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardCreateNestedManyWithoutOwnerInput
}

export type UserUncheckedCreateWithoutQrCodeDocumentsInput = {
  id?: string
  email: string
  password: string
  firstName?: string | null
  lastName?: string | null
  photo?: string | null
  googleId?: string | null
  status?: $Enums.UserStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutApplicantInput
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutUserInput
  files?: Prisma.FileUncheckedCreateNestedManyWithoutUserInput
  createdForms?: Prisma.FormUncheckedCreateNestedManyWithoutCreatorInput
  createdFolders?: Prisma.FolderUncheckedCreateNestedManyWithoutCreatorInput
  createdGroups?: Prisma.GroupUncheckedCreateNestedManyWithoutCreatorInput
  organization?: Prisma.OrganizationUserUncheckedCreateNestedOneWithoutUserInput
  createdProcesses?: Prisma.ProcessUncheckedCreateNestedManyWithoutCreatorInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutUserInput
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput
  ownedDashboards?: Prisma.DashboardUncheckedCreateNestedManyWithoutOwnerInput
}

export type UserCreateOrConnectWithoutQrCodeDocumentsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedCreateWithoutQrCodeDocumentsInput>
}

export type UserUpsertWithoutQrCodeDocumentsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedUpdateWithoutQrCodeDocumentsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedCreateWithoutQrCodeDocumentsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutQrCodeDocumentsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutQrCodeDocumentsInput, Prisma.UserUncheckedUpdateWithoutQrCodeDocumentsInput>
}

export type UserUpdateWithoutQrCodeDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutUserNestedInput
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUpdateManyWithoutOwnerNestedInput
}

export type UserUncheckedUpdateWithoutQrCodeDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  photo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  googleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutApplicantNestedInput
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutUserNestedInput
  files?: Prisma.FileUncheckedUpdateManyWithoutUserNestedInput
  createdForms?: Prisma.FormUncheckedUpdateManyWithoutCreatorNestedInput
  createdFolders?: Prisma.FolderUncheckedUpdateManyWithoutCreatorNestedInput
  createdGroups?: Prisma.GroupUncheckedUpdateManyWithoutCreatorNestedInput
  organization?: Prisma.OrganizationUserUncheckedUpdateOneWithoutUserNestedInput
  createdProcesses?: Prisma.ProcessUncheckedUpdateManyWithoutCreatorNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutUserNestedInput
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput
  ownedDashboards?: Prisma.DashboardUncheckedUpdateManyWithoutOwnerNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  applicantProcesses: number
  auditLogs: number
  files: number
  createdForms: number
  createdFolders: number
  createdGroups: number
  createdProcesses: number
  processedApplications: number
  qrCodeDocuments: number
  roles: number
  ownedDashboards: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcesses?: boolean | UserCountOutputTypeCountApplicantProcessesArgs
  auditLogs?: boolean | UserCountOutputTypeCountAuditLogsArgs
  files?: boolean | UserCountOutputTypeCountFilesArgs
  createdForms?: boolean | UserCountOutputTypeCountCreatedFormsArgs
  createdFolders?: boolean | UserCountOutputTypeCountCreatedFoldersArgs
  createdGroups?: boolean | UserCountOutputTypeCountCreatedGroupsArgs
  createdProcesses?: boolean | UserCountOutputTypeCountCreatedProcessesArgs
  processedApplications?: boolean | UserCountOutputTypeCountProcessedApplicationsArgs
  qrCodeDocuments?: boolean | UserCountOutputTypeCountQrCodeDocumentsArgs
  roles?: boolean | UserCountOutputTypeCountRolesArgs
  ownedDashboards?: boolean | UserCountOutputTypeCountOwnedDashboardsArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountApplicantProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ApplicantProcessWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAuditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuditLogWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountFilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FileWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedFormsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FormWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedFoldersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FolderWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedGroupsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GroupWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountProcessedApplicationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessedApplicationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountQrCodeDocumentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.QrCodeDocumentWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRolesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserRoleWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountOwnedDashboardsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DashboardWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  firstName?: boolean
  lastName?: boolean
  photo?: boolean
  googleId?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  applicantProcesses?: boolean | Prisma.User$applicantProcessesArgs<ExtArgs>
  auditLogs?: boolean | Prisma.User$auditLogsArgs<ExtArgs>
  files?: boolean | Prisma.User$filesArgs<ExtArgs>
  createdForms?: boolean | Prisma.User$createdFormsArgs<ExtArgs>
  createdFolders?: boolean | Prisma.User$createdFoldersArgs<ExtArgs>
  createdGroups?: boolean | Prisma.User$createdGroupsArgs<ExtArgs>
  organization?: boolean | Prisma.User$organizationArgs<ExtArgs>
  createdProcesses?: boolean | Prisma.User$createdProcessesArgs<ExtArgs>
  processedApplications?: boolean | Prisma.User$processedApplicationsArgs<ExtArgs>
  qrCodeDocuments?: boolean | Prisma.User$qrCodeDocumentsArgs<ExtArgs>
  roles?: boolean | Prisma.User$rolesArgs<ExtArgs>
  ownedDashboards?: boolean | Prisma.User$ownedDashboardsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  firstName?: boolean
  lastName?: boolean
  photo?: boolean
  googleId?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  firstName?: boolean
  lastName?: boolean
  photo?: boolean
  googleId?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  email?: boolean
  password?: boolean
  firstName?: boolean
  lastName?: boolean
  photo?: boolean
  googleId?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "email" | "password" | "firstName" | "lastName" | "photo" | "googleId" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcesses?: boolean | Prisma.User$applicantProcessesArgs<ExtArgs>
  auditLogs?: boolean | Prisma.User$auditLogsArgs<ExtArgs>
  files?: boolean | Prisma.User$filesArgs<ExtArgs>
  createdForms?: boolean | Prisma.User$createdFormsArgs<ExtArgs>
  createdFolders?: boolean | Prisma.User$createdFoldersArgs<ExtArgs>
  createdGroups?: boolean | Prisma.User$createdGroupsArgs<ExtArgs>
  organization?: boolean | Prisma.User$organizationArgs<ExtArgs>
  createdProcesses?: boolean | Prisma.User$createdProcessesArgs<ExtArgs>
  processedApplications?: boolean | Prisma.User$processedApplicationsArgs<ExtArgs>
  qrCodeDocuments?: boolean | Prisma.User$qrCodeDocumentsArgs<ExtArgs>
  roles?: boolean | Prisma.User$rolesArgs<ExtArgs>
  ownedDashboards?: boolean | Prisma.User$ownedDashboardsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    applicantProcesses: Prisma.$ApplicantProcessPayload<ExtArgs>[]
    auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
    files: Prisma.$FilePayload<ExtArgs>[]
    createdForms: Prisma.$FormPayload<ExtArgs>[]
    createdFolders: Prisma.$FolderPayload<ExtArgs>[]
    createdGroups: Prisma.$GroupPayload<ExtArgs>[]
    organization: Prisma.$OrganizationUserPayload<ExtArgs> | null
    createdProcesses: Prisma.$ProcessPayload<ExtArgs>[]
    processedApplications: Prisma.$ProcessedApplicationPayload<ExtArgs>[]
    qrCodeDocuments: Prisma.$QrCodeDocumentPayload<ExtArgs>[]
    roles: Prisma.$UserRolePayload<ExtArgs>[]
    ownedDashboards: Prisma.$DashboardPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    email: string
    password: string
    firstName: string | null
    lastName: string | null
    photo: string | null
    googleId: string | null
    status: $Enums.UserStatus
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  applicantProcesses<T extends Prisma.User$applicantProcessesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$applicantProcessesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApplicantProcessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  auditLogs<T extends Prisma.User$auditLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  files<T extends Prisma.User$filesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$filesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdForms<T extends Prisma.User$createdFormsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$createdFormsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdFolders<T extends Prisma.User$createdFoldersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$createdFoldersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FolderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdGroups<T extends Prisma.User$createdGroupsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$createdGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  organization<T extends Prisma.User$organizationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$organizationArgs<ExtArgs>>): Prisma.Prisma__OrganizationUserClient<runtime.Types.Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  createdProcesses<T extends Prisma.User$createdProcessesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$createdProcessesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  processedApplications<T extends Prisma.User$processedApplicationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$processedApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessedApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  qrCodeDocuments<T extends Prisma.User$qrCodeDocumentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$qrCodeDocumentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$QrCodeDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  roles<T extends Prisma.User$rolesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  ownedDashboards<T extends Prisma.User$ownedDashboardsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$ownedDashboardsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DashboardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly firstName: Prisma.FieldRef<"User", 'String'>
  readonly lastName: Prisma.FieldRef<"User", 'String'>
  readonly photo: Prisma.FieldRef<"User", 'String'>
  readonly googleId: Prisma.FieldRef<"User", 'String'>
  readonly status: Prisma.FieldRef<"User", 'UserStatus'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.applicantProcesses
 */
export type User$applicantProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApplicantProcess
   */
  select?: Prisma.ApplicantProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApplicantProcess
   */
  omit?: Prisma.ApplicantProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApplicantProcessInclude<ExtArgs> | null
  where?: Prisma.ApplicantProcessWhereInput
  orderBy?: Prisma.ApplicantProcessOrderByWithRelationInput | Prisma.ApplicantProcessOrderByWithRelationInput[]
  cursor?: Prisma.ApplicantProcessWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ApplicantProcessScalarFieldEnum | Prisma.ApplicantProcessScalarFieldEnum[]
}

/**
 * User.auditLogs
 */
export type User$auditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuditLog
   */
  select?: Prisma.AuditLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuditLog
   */
  omit?: Prisma.AuditLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuditLogInclude<ExtArgs> | null
  where?: Prisma.AuditLogWhereInput
  orderBy?: Prisma.AuditLogOrderByWithRelationInput | Prisma.AuditLogOrderByWithRelationInput[]
  cursor?: Prisma.AuditLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuditLogScalarFieldEnum | Prisma.AuditLogScalarFieldEnum[]
}

/**
 * User.files
 */
export type User$filesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the File
   */
  select?: Prisma.FileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the File
   */
  omit?: Prisma.FileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileInclude<ExtArgs> | null
  where?: Prisma.FileWhereInput
  orderBy?: Prisma.FileOrderByWithRelationInput | Prisma.FileOrderByWithRelationInput[]
  cursor?: Prisma.FileWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FileScalarFieldEnum | Prisma.FileScalarFieldEnum[]
}

/**
 * User.createdForms
 */
export type User$createdFormsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Form
   */
  select?: Prisma.FormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Form
   */
  omit?: Prisma.FormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormInclude<ExtArgs> | null
  where?: Prisma.FormWhereInput
  orderBy?: Prisma.FormOrderByWithRelationInput | Prisma.FormOrderByWithRelationInput[]
  cursor?: Prisma.FormWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FormScalarFieldEnum | Prisma.FormScalarFieldEnum[]
}

/**
 * User.createdFolders
 */
export type User$createdFoldersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Folder
   */
  select?: Prisma.FolderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Folder
   */
  omit?: Prisma.FolderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FolderInclude<ExtArgs> | null
  where?: Prisma.FolderWhereInput
  orderBy?: Prisma.FolderOrderByWithRelationInput | Prisma.FolderOrderByWithRelationInput[]
  cursor?: Prisma.FolderWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FolderScalarFieldEnum | Prisma.FolderScalarFieldEnum[]
}

/**
 * User.createdGroups
 */
export type User$createdGroupsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  where?: Prisma.GroupWhereInput
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  cursor?: Prisma.GroupWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GroupScalarFieldEnum | Prisma.GroupScalarFieldEnum[]
}

/**
 * User.organization
 */
export type User$organizationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrganizationUser
   */
  select?: Prisma.OrganizationUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationUser
   */
  omit?: Prisma.OrganizationUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationUserInclude<ExtArgs> | null
  where?: Prisma.OrganizationUserWhereInput
}

/**
 * User.createdProcesses
 */
export type User$createdProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  where?: Prisma.ProcessWhereInput
  orderBy?: Prisma.ProcessOrderByWithRelationInput | Prisma.ProcessOrderByWithRelationInput[]
  cursor?: Prisma.ProcessWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProcessScalarFieldEnum | Prisma.ProcessScalarFieldEnum[]
}

/**
 * User.processedApplications
 */
export type User$processedApplicationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProcessedApplication
   */
  select?: Prisma.ProcessedApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProcessedApplication
   */
  omit?: Prisma.ProcessedApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessedApplicationInclude<ExtArgs> | null
  where?: Prisma.ProcessedApplicationWhereInput
  orderBy?: Prisma.ProcessedApplicationOrderByWithRelationInput | Prisma.ProcessedApplicationOrderByWithRelationInput[]
  cursor?: Prisma.ProcessedApplicationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProcessedApplicationScalarFieldEnum | Prisma.ProcessedApplicationScalarFieldEnum[]
}

/**
 * User.qrCodeDocuments
 */
export type User$qrCodeDocumentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the QrCodeDocument
   */
  select?: Prisma.QrCodeDocumentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the QrCodeDocument
   */
  omit?: Prisma.QrCodeDocumentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.QrCodeDocumentInclude<ExtArgs> | null
  where?: Prisma.QrCodeDocumentWhereInput
  orderBy?: Prisma.QrCodeDocumentOrderByWithRelationInput | Prisma.QrCodeDocumentOrderByWithRelationInput[]
  cursor?: Prisma.QrCodeDocumentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.QrCodeDocumentScalarFieldEnum | Prisma.QrCodeDocumentScalarFieldEnum[]
}

/**
 * User.roles
 */
export type User$rolesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserRole
   */
  select?: Prisma.UserRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserRole
   */
  omit?: Prisma.UserRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserRoleInclude<ExtArgs> | null
  where?: Prisma.UserRoleWhereInput
  orderBy?: Prisma.UserRoleOrderByWithRelationInput | Prisma.UserRoleOrderByWithRelationInput[]
  cursor?: Prisma.UserRoleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserRoleScalarFieldEnum | Prisma.UserRoleScalarFieldEnum[]
}

/**
 * User.ownedDashboards
 */
export type User$ownedDashboardsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Dashboard
   */
  select?: Prisma.DashboardSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Dashboard
   */
  omit?: Prisma.DashboardOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DashboardInclude<ExtArgs> | null
  where?: Prisma.DashboardWhereInput
  orderBy?: Prisma.DashboardOrderByWithRelationInput | Prisma.DashboardOrderByWithRelationInput[]
  cursor?: Prisma.DashboardWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DashboardScalarFieldEnum | Prisma.DashboardScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
