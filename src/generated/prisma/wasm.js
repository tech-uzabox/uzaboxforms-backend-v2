
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  photo: 'photo',
  googleId: 'googleId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  userId: 'userId',
  roleId: 'roleId',
  status: 'status'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  fileUrl: 'fileUrl',
  thumbnailUrl: 'thumbnailUrl',
  size: 'size',
  isPrivate: 'isPrivate',
  title: 'title',
  userId: 'userId',
  fileType: 'fileType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  details: 'details',
  status: 'status',
  errorMessage: 'errorMessage'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  status: 'status',
  creatorId: 'creatorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GroupRoleScalarFieldEnum = {
  groupId: 'groupId',
  roleId: 'roleId',
  status: 'status'
};

exports.Prisma.ProcessScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  groupId: 'groupId',
  creatorId: 'creatorId',
  status: 'status',
  archived: 'archived',
  staffViewForms: 'staffViewForms',
  applicantViewProcessLevel: 'applicantViewProcessLevel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProcessRoleScalarFieldEnum = {
  processId: 'processId',
  roleId: 'roleId',
  status: 'status'
};

exports.Prisma.FormScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  status: 'status',
  archived: 'archived',
  creatorId: 'creatorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  design: 'design'
};

exports.Prisma.FormResponseScalarFieldEnum = {
  id: 'id',
  formId: 'formId',
  applicantProcessId: 'applicantProcessId',
  responses: 'responses',
  createdAt: 'createdAt',
  processId: 'processId'
};

exports.Prisma.ProcessFormScalarFieldEnum = {
  id: 'id',
  processId: 'processId',
  formId: 'formId',
  order: 'order',
  nextStepType: 'nextStepType',
  nextStepRoles: 'nextStepRoles',
  nextStaffId: 'nextStaffId',
  notificationType: 'notificationType',
  notificationRoles: 'notificationRoles',
  notificationToId: 'notificationToId',
  notificationComment: 'notificationComment',
  notifyApplicant: 'notifyApplicant',
  applicantNotificationContent: 'applicantNotificationContent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApplicantProcessScalarFieldEnum = {
  id: 'id',
  applicantId: 'applicantId',
  processId: 'processId',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.APCompletedFormScalarFieldEnum = {
  id: 'id',
  applicantProcessId: 'applicantProcessId',
  formId: 'formId',
  reviewerId: 'reviewerId',
  createdAt: 'createdAt'
};

exports.Prisma.ProcessCommentScalarFieldEnum = {
  id: 'id',
  applicantProcessId: 'applicantProcessId',
  userId: 'userId',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.OrganizationUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  superiorId: 'superiorId',
  title: 'title'
};

exports.Prisma.DashboardScalarFieldEnum = {
  id: 'id',
  name: 'name',
  ownerId: 'ownerId',
  allowedUsers: 'allowedUsers',
  allowedRoles: 'allowedRoles',
  layout: 'layout',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WidgetScalarFieldEnum = {
  id: 'id',
  dashboardId: 'dashboardId',
  title: 'title',
  visualizationType: 'visualizationType',
  config: 'config',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QrCodeDocumentScalarFieldEnum = {
  id: 'id',
  documentName: 'documentName',
  fileName: 'fileName',
  qrCodeId: 'qrCodeId',
  creatorId: 'creatorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp',
  expiresAt: 'expiresAt'
};

exports.Prisma.ManagementScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  type: 'type',
  uploadedAt: 'uploadedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddToDatabaseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  status: 'status',
  levels: 'levels',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  photo: 'photo',
  googleId: 'googleId'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.UserRoleOrderByRelevanceFieldEnum = {
  userId: 'userId',
  roleId: 'roleId'
};

exports.Prisma.FileOrderByRelevanceFieldEnum = {
  id: 'id',
  fileUrl: 'fileUrl',
  thumbnailUrl: 'thumbnailUrl',
  title: 'title',
  userId: 'userId',
  fileType: 'fileType'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.AuditLogOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  status: 'status',
  errorMessage: 'errorMessage'
};

exports.Prisma.GroupOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  creatorId: 'creatorId'
};

exports.Prisma.GroupRoleOrderByRelevanceFieldEnum = {
  groupId: 'groupId',
  roleId: 'roleId'
};

exports.Prisma.ProcessOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  groupId: 'groupId',
  creatorId: 'creatorId'
};

exports.Prisma.ProcessRoleOrderByRelevanceFieldEnum = {
  processId: 'processId',
  roleId: 'roleId'
};

exports.Prisma.FormOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  creatorId: 'creatorId'
};

exports.Prisma.FormResponseOrderByRelevanceFieldEnum = {
  id: 'id',
  formId: 'formId',
  applicantProcessId: 'applicantProcessId',
  processId: 'processId'
};

exports.Prisma.ProcessFormOrderByRelevanceFieldEnum = {
  id: 'id',
  processId: 'processId',
  formId: 'formId',
  nextStepRoles: 'nextStepRoles',
  nextStaffId: 'nextStaffId',
  notificationRoles: 'notificationRoles',
  notificationToId: 'notificationToId',
  notificationComment: 'notificationComment',
  applicantNotificationContent: 'applicantNotificationContent'
};

exports.Prisma.ApplicantProcessOrderByRelevanceFieldEnum = {
  id: 'id',
  applicantId: 'applicantId',
  processId: 'processId'
};

exports.Prisma.APCompletedFormOrderByRelevanceFieldEnum = {
  id: 'id',
  applicantProcessId: 'applicantProcessId',
  formId: 'formId',
  reviewerId: 'reviewerId'
};

exports.Prisma.ProcessCommentOrderByRelevanceFieldEnum = {
  id: 'id',
  applicantProcessId: 'applicantProcessId',
  userId: 'userId',
  comment: 'comment'
};

exports.Prisma.OrganizationUserOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  superiorId: 'superiorId',
  title: 'title'
};

exports.Prisma.DashboardOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  ownerId: 'ownerId',
  allowedUsers: 'allowedUsers',
  allowedRoles: 'allowedRoles'
};

exports.Prisma.WidgetOrderByRelevanceFieldEnum = {
  id: 'id',
  dashboardId: 'dashboardId',
  title: 'title',
  visualizationType: 'visualizationType'
};

exports.Prisma.QrCodeDocumentOrderByRelevanceFieldEnum = {
  id: 'id',
  documentName: 'documentName',
  fileName: 'fileName',
  qrCodeId: 'qrCodeId',
  creatorId: 'creatorId'
};

exports.Prisma.OtpOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp'
};

exports.Prisma.ManagementOrderByRelevanceFieldEnum = {
  id: 'id',
  fileName: 'fileName'
};

exports.Prisma.AddToDatabaseOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};
exports.UserStatus = exports.$Enums.UserStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED',
  PENDING: 'PENDING'
};

exports.RoleStatus = exports.$Enums.RoleStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED'
};

exports.GroupStatus = exports.$Enums.GroupStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED'
};

exports.ProcessType = exports.$Enums.ProcessType = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE'
};

exports.ProcessStatus = exports.$Enums.ProcessStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED'
};

exports.FormType = exports.$Enums.FormType = {
  PUBLIC: 'PUBLIC',
  INTERNAL: 'INTERNAL'
};

exports.FormStatus = exports.$Enums.FormStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED'
};

exports.NextStepType = exports.$Enums.NextStepType = {
  STATIC: 'STATIC',
  DYNAMIC: 'DYNAMIC',
  FOLLOW_ORGANIZATION_CHART: 'FOLLOW_ORGANIZATION_CHART',
  NOT_APPLICABLE: 'NOT_APPLICABLE'
};

exports.ManagementType = exports.$Enums.ManagementType = {
  HEADER: 'HEADER',
  FOOTER: 'FOOTER'
};

exports.AddToDatabaseStatus = exports.$Enums.AddToDatabaseStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRole: 'UserRole',
  File: 'File',
  AuditLog: 'AuditLog',
  Group: 'Group',
  GroupRole: 'GroupRole',
  Process: 'Process',
  ProcessRole: 'ProcessRole',
  Form: 'Form',
  FormResponse: 'FormResponse',
  ProcessForm: 'ProcessForm',
  ApplicantProcess: 'ApplicantProcess',
  APCompletedForm: 'APCompletedForm',
  ProcessComment: 'ProcessComment',
  OrganizationUser: 'OrganizationUser',
  Dashboard: 'Dashboard',
  Widget: 'Widget',
  QrCodeDocument: 'QrCodeDocument',
  Otp: 'Otp',
  Management: 'Management',
  AddToDatabase: 'AddToDatabase'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\aurum\\work\\uzaform\\ref-backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "fullTextSearchPostgres",
      "queryCompiler",
      "relationJoins"
    ],
    "sourceFilePath": "D:\\aurum\\work\\uzaform\\ref-backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"driverAdapters\", \"queryCompiler\", \"relationJoins\", \"fullTextSearchPostgres\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                 String             @id @default(uuid()) @db.Uuid\n  email              String             @unique @db.VarChar(255)\n  password           String             @db.VarChar(255)\n  firstName          String?\n  lastName           String?\n  photo              String?\n  googleId           String?            @unique\n  status             UserStatus         @default(ENABLED)\n  createdAt          DateTime           @default(now())\n  updatedAt          DateTime           @updatedAt\n  applicantProcesses ApplicantProcess[]\n  auditLogs          AuditLog[]\n  files              File[]\n  createdForms       Form[]             @relation(\"FormCreator\")\n  createdGroups      Group[]            @relation(\"GroupCreator\")\n  organization       OrganizationUser?\n  createdProcesses   Process[]          @relation(\"ProcessCreator\")\n  roles              UserRole[]\n\n  @@index([email])\n  @@map(\"users\")\n}\n\nmodel Role {\n  id          String        @id @default(uuid()) @db.Uuid\n  name        String        @unique\n  description String?\n  status      RoleStatus    @default(ENABLED)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  groups      GroupRole[]\n  processes   ProcessRole[]\n  users       UserRole[]\n\n  @@map(\"roles\")\n}\n\nmodel UserRole {\n  userId String     @db.Uuid\n  roleId String     @db.Uuid\n  status RoleStatus @default(ENABLED)\n  role   Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([userId, roleId])\n  @@map(\"user_roles\")\n}\n\nmodel File {\n  id           String   @id @default(uuid()) @db.Uuid\n  fileUrl      String   @db.VarChar(255)\n  thumbnailUrl String?\n  size         Int\n  isPrivate    Boolean  @default(false)\n  title        String   @db.VarChar(255)\n  userId       String   @db.Uuid\n  fileType     String   @db.VarChar(255)\n  createdAt    DateTime @default(now()) @db.Timestamp(0)\n  updatedAt    DateTime @updatedAt @db.Timestamp(0)\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@map(\"files\")\n}\n\nmodel AuditLog {\n  id           String   @id @default(uuid()) @db.Uuid\n  timestamp    DateTime @default(now())\n  userId       String?  @db.Uuid\n  action       String\n  resource     String?\n  resourceId   String?\n  details      Json?\n  status       String\n  errorMessage String?\n  user         User?    @relation(fields: [userId], references: [id])\n\n  @@index([userId, action, resource])\n  @@map(\"audit_logs\")\n}\n\nmodel Group {\n  id        String      @id @default(uuid()) @db.Uuid\n  name      String      @unique\n  status    GroupStatus @default(ENABLED)\n  creatorId String      @db.Uuid\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n  roles     GroupRole[]\n  creator   User        @relation(\"GroupCreator\", fields: [creatorId], references: [id])\n  processes Process[]\n\n  @@map(\"groups\")\n}\n\nmodel GroupRole {\n  groupId String     @db.Uuid\n  roleId  String     @db.Uuid\n  status  RoleStatus @default(ENABLED)\n  group   Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)\n  role    Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([groupId, roleId])\n  @@map(\"group_roles\")\n}\n\nmodel Process {\n  id                        String             @id @default(uuid()) @db.Uuid\n  name                      String\n  type                      ProcessType        @default(PRIVATE)\n  groupId                   String             @db.Uuid\n  creatorId                 String             @db.Uuid\n  status                    ProcessStatus      @default(ENABLED)\n  archived                  Boolean            @default(false)\n  staffViewForms            Boolean            @default(false)\n  applicantViewProcessLevel Boolean            @default(false)\n  createdAt                 DateTime           @default(now())\n  updatedAt                 DateTime           @updatedAt\n  applicantProcesses        ApplicantProcess[]\n  formResponses             FormResponse[]\n  forms                     ProcessForm[]\n  roles                     ProcessRole[]\n  creator                   User               @relation(\"ProcessCreator\", fields: [creatorId], references: [id])\n  group                     Group              @relation(fields: [groupId], references: [id])\n\n  @@index([groupId])\n  @@index([creatorId])\n  @@map(\"processes\")\n}\n\nmodel ProcessRole {\n  processId String     @db.Uuid\n  roleId    String     @db.Uuid\n  status    RoleStatus @default(ENABLED)\n  process   Process    @relation(fields: [processId], references: [id], onDelete: Cascade)\n  role      Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([processId, roleId])\n  @@map(\"process_roles\")\n}\n\nmodel Form {\n  id           String         @id @default(uuid()) @db.Uuid\n  name         String\n  type         FormType       @default(INTERNAL)\n  status       FormStatus     @default(ENABLED)\n  archived     Boolean        @default(false)\n  creatorId    String         @db.Uuid\n  createdAt    DateTime       @default(now())\n  updatedAt    DateTime       @updatedAt\n  design       Json?\n  responses    FormResponse[]\n  creator      User           @relation(\"FormCreator\", fields: [creatorId], references: [id])\n  processForms ProcessForm[]\n\n  @@index([creatorId])\n  @@map(\"forms\")\n}\n\nmodel FormResponse {\n  id                 String           @id @default(uuid()) @db.Uuid\n  formId             String           @db.Uuid\n  applicantProcessId String           @db.Uuid\n  responses          Json\n  createdAt          DateTime         @default(now())\n  processId          String           @db.Uuid\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n  form               Form             @relation(fields: [formId], references: [id], onDelete: Cascade)\n  process            Process          @relation(fields: [processId], references: [id], onDelete: Cascade)\n\n  @@unique([formId, applicantProcessId])\n  @@index([formId])\n  @@index([processId])\n  @@index([applicantProcessId])\n  @@map(\"form_responses\")\n}\n\nmodel ProcessForm {\n  id                           String       @id @default(uuid()) @db.Uuid\n  processId                    String       @db.Uuid\n  formId                       String       @db.Uuid\n  order                        Int\n  nextStepType                 NextStepType @default(NOT_APPLICABLE)\n  nextStepRoles                String[]\n  nextStaffId                  String?      @db.Uuid\n  notificationType             NextStepType @default(NOT_APPLICABLE)\n  notificationRoles            String[]\n  notificationToId             String?      @db.Uuid\n  notificationComment          String?\n  notifyApplicant              Boolean      @default(false)\n  applicantNotificationContent String?\n  createdAt                    DateTime     @default(now())\n  updatedAt                    DateTime     @updatedAt\n  form                         Form         @relation(fields: [formId], references: [id], onDelete: Cascade)\n  process                      Process      @relation(fields: [processId], references: [id], onDelete: Cascade)\n\n  @@index([processId, formId])\n  @@map(\"process_forms\")\n}\n\nmodel ApplicantProcess {\n  id             String            @id @default(uuid()) @db.Uuid\n  applicantId    String            @db.Uuid\n  processId      String            @db.Uuid\n  status         ProcessStatus     @default(ENABLED)\n  createdAt      DateTime          @default(now())\n  completedForms APCompletedForm[]\n  applicant      User              @relation(fields: [applicantId], references: [id])\n  process        Process           @relation(fields: [processId], references: [id])\n  responses      FormResponse[]\n  comments       ProcessComment[]\n\n  @@index([applicantId])\n  @@index([processId])\n  @@map(\"applicant_processes\")\n}\n\nmodel APCompletedForm {\n  id                 String           @id @default(uuid()) @db.Uuid\n  applicantProcessId String           @db.Uuid\n  formId             String           @db.Uuid\n  reviewerId         String?          @db.Uuid\n  createdAt          DateTime         @default(now())\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n\n  @@index([applicantProcessId])\n  @@map(\"ap_completed_forms\")\n}\n\nmodel ProcessComment {\n  id                 String           @id @default(uuid()) @db.Uuid\n  applicantProcessId String           @db.Uuid\n  userId             String           @db.Uuid\n  comment            String\n  createdAt          DateTime         @default(now())\n  applicantProcess   ApplicantProcess @relation(fields: [applicantProcessId], references: [id], onDelete: Cascade)\n\n  @@index([applicantProcessId])\n  @@index([userId])\n  @@map(\"process_comments\")\n}\n\nmodel OrganizationUser {\n  id           String             @id @default(uuid()) @db.Uuid\n  userId       String             @unique @db.Uuid\n  superiorId   String?            @db.Uuid\n  title        String\n  superior     OrganizationUser?  @relation(\"Hierarchy\", fields: [superiorId], references: [id])\n  subordinates OrganizationUser[] @relation(\"Hierarchy\")\n  user         User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"organization_users\")\n}\n\nmodel Dashboard {\n  id           String   @id @default(uuid()) @db.Uuid\n  name         String\n  ownerId      String   @db.Uuid\n  allowedUsers String[]\n  allowedRoles String[]\n  layout       Json?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  widgets      Widget[]\n\n  @@index([ownerId])\n  @@map(\"dashboards\")\n}\n\nmodel Widget {\n  id                String    @id @default(uuid()) @db.Uuid\n  dashboardId       String    @db.Uuid\n  title             String\n  visualizationType String\n  config            Json\n  order             Int\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n  dashboard         Dashboard @relation(fields: [dashboardId], references: [id], onDelete: Cascade)\n\n  @@index([dashboardId])\n  @@map(\"widgets\")\n}\n\nmodel QrCodeDocument {\n  id           String   @id @default(uuid()) @db.Uuid\n  documentName String\n  fileName     String\n  qrCodeId     String   @unique\n  creatorId    String   @db.Uuid\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  @@index([creatorId])\n  @@map(\"qr_code_documents\")\n}\n\nmodel Otp {\n  id        String   @id @default(uuid()) @db.Uuid\n  email     String\n  otp       String\n  expiresAt DateTime\n\n  @@index([email])\n  @@map(\"otps\")\n}\n\nmodel Management {\n  id         String         @id @default(uuid()) @db.Uuid\n  fileName   String\n  type       ManagementType\n  uploadedAt DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n\n  @@map(\"management\")\n}\n\nmodel AddToDatabase {\n  id        String              @id @default(uuid()) @db.Uuid\n  name      String\n  status    AddToDatabaseStatus @default(ENABLED)\n  levels    Json\n  createdAt DateTime            @default(now())\n  updatedAt DateTime            @updatedAt\n\n  @@map(\"add_to_databases\")\n}\n\nenum UserStatus {\n  ENABLED\n  DISABLED\n  PENDING\n}\n\nenum RoleStatus {\n  ENABLED\n  DISABLED\n}\n\nenum GroupStatus {\n  ENABLED\n  DISABLED\n}\n\nenum ProcessType {\n  PUBLIC\n  PRIVATE\n}\n\nenum ProcessStatus {\n  ENABLED\n  DISABLED\n}\n\nenum FormType {\n  PUBLIC\n  INTERNAL\n}\n\nenum FormStatus {\n  ENABLED\n  DISABLED\n}\n\nenum NextStepType {\n  STATIC\n  DYNAMIC\n  FOLLOW_ORGANIZATION_CHART\n  NOT_APPLICABLE\n}\n\nenum ManagementType {\n  HEADER\n  FOOTER\n}\n\nenum AddToDatabaseStatus {\n  ENABLED\n  DISABLED\n}\n",
  "inlineSchemaHash": "40cd05d6eea2d8c62344ae74701d1703ba493abf84be6d82863162c34a5e725c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcesses\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToUser\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToUser\"},{\"name\":\"createdForms\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormCreator\"},{\"name\":\"createdGroups\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupCreator\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"OrganizationUserToUser\"},{\"name\":\"createdProcesses\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessCreator\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groups\",\"kind\":\"object\",\"type\":\"GroupRole\",\"relationName\":\"GroupRoleToRole\"},{\"name\":\"processes\",\"kind\":\"object\",\"type\":\"ProcessRole\",\"relationName\":\"ProcessRoleToRole\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"roles\"},\"UserRole\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"}],\"dbName\":\"user_roles\"},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileToUser\"}],\"dbName\":\"files\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"Group\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"GroupStatus\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"GroupRole\",\"relationName\":\"GroupToGroupRole\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupCreator\"},{\"name\":\"processes\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"GroupToProcess\"}],\"dbName\":\"groups\"},\"GroupRole\":{\"fields\":[{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToGroupRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"GroupRoleToRole\"}],\"dbName\":\"group_roles\"},\"Process\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ProcessType\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProcessStatus\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"staffViewForms\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantViewProcessLevel\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcesses\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToProcess\"},{\"name\":\"formResponses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"FormResponseToProcess\"},{\"name\":\"forms\",\"kind\":\"object\",\"type\":\"ProcessForm\",\"relationName\":\"ProcessToProcessForm\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"ProcessRole\",\"relationName\":\"ProcessToProcessRole\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProcessCreator\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToProcess\"}],\"dbName\":\"processes\"},\"ProcessRole\":{\"fields\":[{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoleStatus\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"ProcessRoleToRole\"}],\"dbName\":\"process_roles\"},\"Form\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"FormType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FormStatus\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"design\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"FormToFormResponse\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FormCreator\"},{\"name\":\"processForms\",\"kind\":\"object\",\"type\":\"ProcessForm\",\"relationName\":\"FormToProcessForm\"}],\"dbName\":\"forms\"},\"FormResponse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responses\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToFormResponse\"},{\"name\":\"form\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormToFormResponse\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"FormResponseToProcess\"}],\"dbName\":\"form_responses\"},\"ProcessForm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nextStepType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"nextStepRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextStaffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationType\",\"kind\":\"enum\",\"type\":\"NextStepType\"},{\"name\":\"notificationRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationComment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifyApplicant\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantNotificationContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"form\",\"kind\":\"object\",\"type\":\"Form\",\"relationName\":\"FormToProcessForm\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ProcessToProcessForm\"}],\"dbName\":\"process_forms\"},\"ApplicantProcess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProcessStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedForms\",\"kind\":\"object\",\"type\":\"APCompletedForm\",\"relationName\":\"APCompletedFormToApplicantProcess\"},{\"name\":\"applicant\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApplicantProcessToUser\"},{\"name\":\"process\",\"kind\":\"object\",\"type\":\"Process\",\"relationName\":\"ApplicantProcessToProcess\"},{\"name\":\"responses\",\"kind\":\"object\",\"type\":\"FormResponse\",\"relationName\":\"ApplicantProcessToFormResponse\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ProcessComment\",\"relationName\":\"ApplicantProcessToProcessComment\"}],\"dbName\":\"applicant_processes\"},\"APCompletedForm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"APCompletedFormToApplicantProcess\"}],\"dbName\":\"ap_completed_forms\"},\"ProcessComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicantProcessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicantProcess\",\"kind\":\"object\",\"type\":\"ApplicantProcess\",\"relationName\":\"ApplicantProcessToProcessComment\"}],\"dbName\":\"process_comments\"},\"OrganizationUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"superiorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"superior\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"Hierarchy\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"OrganizationUser\",\"relationName\":\"Hierarchy\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationUserToUser\"}],\"dbName\":\"organization_users\"},\"Dashboard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowedUsers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowedRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"layout\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"widgets\",\"kind\":\"object\",\"type\":\"Widget\",\"relationName\":\"DashboardToWidget\"}],\"dbName\":\"dashboards\"},\"Widget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dashboardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visualizationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dashboard\",\"kind\":\"object\",\"type\":\"Dashboard\",\"relationName\":\"DashboardToWidget\"}],\"dbName\":\"widgets\"},\"QrCodeDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"qr_code_documents\"},\"Otp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"otps\"},\"Management\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ManagementType\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"management\"},\"AddToDatabase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AddToDatabaseStatus\"},{\"name\":\"levels\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"add_to_databases\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

