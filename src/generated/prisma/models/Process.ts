
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Process` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Process
 * 
 */
export type ProcessModel = runtime.Types.Result.DefaultSelection<Prisma.$ProcessPayload>

export type AggregateProcess = {
  _count: ProcessCountAggregateOutputType | null
  _min: ProcessMinAggregateOutputType | null
  _max: ProcessMaxAggregateOutputType | null
}

export type ProcessMinAggregateOutputType = {
  id: string | null
  name: string | null
  type: $Enums.ProcessType | null
  groupId: string | null
  creatorId: string | null
  status: $Enums.ProcessStatus | null
  archived: boolean | null
  staffViewForms: boolean | null
  applicantViewProcessLevel: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProcessMaxAggregateOutputType = {
  id: string | null
  name: string | null
  type: $Enums.ProcessType | null
  groupId: string | null
  creatorId: string | null
  status: $Enums.ProcessStatus | null
  archived: boolean | null
  staffViewForms: boolean | null
  applicantViewProcessLevel: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProcessCountAggregateOutputType = {
  id: number
  name: number
  type: number
  groupId: number
  creatorId: number
  status: number
  archived: number
  staffViewForms: number
  applicantViewProcessLevel: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProcessMinAggregateInputType = {
  id?: true
  name?: true
  type?: true
  groupId?: true
  creatorId?: true
  status?: true
  archived?: true
  staffViewForms?: true
  applicantViewProcessLevel?: true
  createdAt?: true
  updatedAt?: true
}

export type ProcessMaxAggregateInputType = {
  id?: true
  name?: true
  type?: true
  groupId?: true
  creatorId?: true
  status?: true
  archived?: true
  staffViewForms?: true
  applicantViewProcessLevel?: true
  createdAt?: true
  updatedAt?: true
}

export type ProcessCountAggregateInputType = {
  id?: true
  name?: true
  type?: true
  groupId?: true
  creatorId?: true
  status?: true
  archived?: true
  staffViewForms?: true
  applicantViewProcessLevel?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProcessAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Process to aggregate.
   */
  where?: Prisma.ProcessWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Processes to fetch.
   */
  orderBy?: Prisma.ProcessOrderByWithRelationInput | Prisma.ProcessOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProcessWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Processes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Processes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Processes
  **/
  _count?: true | ProcessCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProcessMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProcessMaxAggregateInputType
}

export type GetProcessAggregateType<T extends ProcessAggregateArgs> = {
      [P in keyof T & keyof AggregateProcess]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProcess[P]>
    : Prisma.GetScalarType<T[P], AggregateProcess[P]>
}




export type ProcessGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessWhereInput
  orderBy?: Prisma.ProcessOrderByWithAggregationInput | Prisma.ProcessOrderByWithAggregationInput[]
  by: Prisma.ProcessScalarFieldEnum[] | Prisma.ProcessScalarFieldEnum
  having?: Prisma.ProcessScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProcessCountAggregateInputType | true
  _min?: ProcessMinAggregateInputType
  _max?: ProcessMaxAggregateInputType
}

export type ProcessGroupByOutputType = {
  id: string
  name: string
  type: $Enums.ProcessType
  groupId: string
  creatorId: string
  status: $Enums.ProcessStatus
  archived: boolean
  staffViewForms: boolean
  applicantViewProcessLevel: boolean
  createdAt: Date
  updatedAt: Date
  _count: ProcessCountAggregateOutputType | null
  _min: ProcessMinAggregateOutputType | null
  _max: ProcessMaxAggregateOutputType | null
}

type GetProcessGroupByPayload<T extends ProcessGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProcessGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProcessGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProcessGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProcessGroupByOutputType[P]>
      }
    >
  >



export type ProcessWhereInput = {
  AND?: Prisma.ProcessWhereInput | Prisma.ProcessWhereInput[]
  OR?: Prisma.ProcessWhereInput[]
  NOT?: Prisma.ProcessWhereInput | Prisma.ProcessWhereInput[]
  id?: Prisma.UuidFilter<"Process"> | string
  name?: Prisma.StringFilter<"Process"> | string
  type?: Prisma.EnumProcessTypeFilter<"Process"> | $Enums.ProcessType
  groupId?: Prisma.UuidFilter<"Process"> | string
  creatorId?: Prisma.UuidFilter<"Process"> | string
  status?: Prisma.EnumProcessStatusFilter<"Process"> | $Enums.ProcessStatus
  archived?: Prisma.BoolFilter<"Process"> | boolean
  staffViewForms?: Prisma.BoolFilter<"Process"> | boolean
  applicantViewProcessLevel?: Prisma.BoolFilter<"Process"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Process"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Process"> | Date | string
  applicantProcesses?: Prisma.ApplicantProcessListRelationFilter
  formResponses?: Prisma.FormResponseListRelationFilter
  forms?: Prisma.ProcessFormListRelationFilter
  processedApplications?: Prisma.ProcessedApplicationListRelationFilter
  roles?: Prisma.ProcessRoleListRelationFilter
  creator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  group?: Prisma.XOR<Prisma.GroupScalarRelationFilter, Prisma.GroupWhereInput>
}

export type ProcessOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  groupId?: Prisma.SortOrder
  creatorId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  staffViewForms?: Prisma.SortOrder
  applicantViewProcessLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  applicantProcesses?: Prisma.ApplicantProcessOrderByRelationAggregateInput
  formResponses?: Prisma.FormResponseOrderByRelationAggregateInput
  forms?: Prisma.ProcessFormOrderByRelationAggregateInput
  processedApplications?: Prisma.ProcessedApplicationOrderByRelationAggregateInput
  roles?: Prisma.ProcessRoleOrderByRelationAggregateInput
  creator?: Prisma.UserOrderByWithRelationInput
  group?: Prisma.GroupOrderByWithRelationInput
  _relevance?: Prisma.ProcessOrderByRelevanceInput
}

export type ProcessWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProcessWhereInput | Prisma.ProcessWhereInput[]
  OR?: Prisma.ProcessWhereInput[]
  NOT?: Prisma.ProcessWhereInput | Prisma.ProcessWhereInput[]
  name?: Prisma.StringFilter<"Process"> | string
  type?: Prisma.EnumProcessTypeFilter<"Process"> | $Enums.ProcessType
  groupId?: Prisma.UuidFilter<"Process"> | string
  creatorId?: Prisma.UuidFilter<"Process"> | string
  status?: Prisma.EnumProcessStatusFilter<"Process"> | $Enums.ProcessStatus
  archived?: Prisma.BoolFilter<"Process"> | boolean
  staffViewForms?: Prisma.BoolFilter<"Process"> | boolean
  applicantViewProcessLevel?: Prisma.BoolFilter<"Process"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Process"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Process"> | Date | string
  applicantProcesses?: Prisma.ApplicantProcessListRelationFilter
  formResponses?: Prisma.FormResponseListRelationFilter
  forms?: Prisma.ProcessFormListRelationFilter
  processedApplications?: Prisma.ProcessedApplicationListRelationFilter
  roles?: Prisma.ProcessRoleListRelationFilter
  creator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  group?: Prisma.XOR<Prisma.GroupScalarRelationFilter, Prisma.GroupWhereInput>
}, "id">

export type ProcessOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  groupId?: Prisma.SortOrder
  creatorId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  staffViewForms?: Prisma.SortOrder
  applicantViewProcessLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProcessCountOrderByAggregateInput
  _max?: Prisma.ProcessMaxOrderByAggregateInput
  _min?: Prisma.ProcessMinOrderByAggregateInput
}

export type ProcessScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProcessScalarWhereWithAggregatesInput | Prisma.ProcessScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProcessScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProcessScalarWhereWithAggregatesInput | Prisma.ProcessScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"Process"> | string
  name?: Prisma.StringWithAggregatesFilter<"Process"> | string
  type?: Prisma.EnumProcessTypeWithAggregatesFilter<"Process"> | $Enums.ProcessType
  groupId?: Prisma.UuidWithAggregatesFilter<"Process"> | string
  creatorId?: Prisma.UuidWithAggregatesFilter<"Process"> | string
  status?: Prisma.EnumProcessStatusWithAggregatesFilter<"Process"> | $Enums.ProcessStatus
  archived?: Prisma.BoolWithAggregatesFilter<"Process"> | boolean
  staffViewForms?: Prisma.BoolWithAggregatesFilter<"Process"> | boolean
  applicantViewProcessLevel?: Prisma.BoolWithAggregatesFilter<"Process"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Process"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Process"> | Date | string
}

export type ProcessCreateInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateManyInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProcessUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProcessUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProcessListRelationFilter = {
  every?: Prisma.ProcessWhereInput
  some?: Prisma.ProcessWhereInput
  none?: Prisma.ProcessWhereInput
}

export type ProcessOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProcessOrderByRelevanceInput = {
  fields: Prisma.ProcessOrderByRelevanceFieldEnum | Prisma.ProcessOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ProcessCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  groupId?: Prisma.SortOrder
  creatorId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  staffViewForms?: Prisma.SortOrder
  applicantViewProcessLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProcessMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  groupId?: Prisma.SortOrder
  creatorId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  staffViewForms?: Prisma.SortOrder
  applicantViewProcessLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProcessMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  groupId?: Prisma.SortOrder
  creatorId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  staffViewForms?: Prisma.SortOrder
  applicantViewProcessLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProcessScalarRelationFilter = {
  is?: Prisma.ProcessWhereInput
  isNot?: Prisma.ProcessWhereInput
}

export type ProcessCreateNestedManyWithoutCreatorInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput> | Prisma.ProcessCreateWithoutCreatorInput[] | Prisma.ProcessUncheckedCreateWithoutCreatorInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutCreatorInput | Prisma.ProcessCreateOrConnectWithoutCreatorInput[]
  createMany?: Prisma.ProcessCreateManyCreatorInputEnvelope
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
}

export type ProcessUncheckedCreateNestedManyWithoutCreatorInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput> | Prisma.ProcessCreateWithoutCreatorInput[] | Prisma.ProcessUncheckedCreateWithoutCreatorInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutCreatorInput | Prisma.ProcessCreateOrConnectWithoutCreatorInput[]
  createMany?: Prisma.ProcessCreateManyCreatorInputEnvelope
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
}

export type ProcessUpdateManyWithoutCreatorNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput> | Prisma.ProcessCreateWithoutCreatorInput[] | Prisma.ProcessUncheckedCreateWithoutCreatorInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutCreatorInput | Prisma.ProcessCreateOrConnectWithoutCreatorInput[]
  upsert?: Prisma.ProcessUpsertWithWhereUniqueWithoutCreatorInput | Prisma.ProcessUpsertWithWhereUniqueWithoutCreatorInput[]
  createMany?: Prisma.ProcessCreateManyCreatorInputEnvelope
  set?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  disconnect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  delete?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  update?: Prisma.ProcessUpdateWithWhereUniqueWithoutCreatorInput | Prisma.ProcessUpdateWithWhereUniqueWithoutCreatorInput[]
  updateMany?: Prisma.ProcessUpdateManyWithWhereWithoutCreatorInput | Prisma.ProcessUpdateManyWithWhereWithoutCreatorInput[]
  deleteMany?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
}

export type ProcessUncheckedUpdateManyWithoutCreatorNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput> | Prisma.ProcessCreateWithoutCreatorInput[] | Prisma.ProcessUncheckedCreateWithoutCreatorInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutCreatorInput | Prisma.ProcessCreateOrConnectWithoutCreatorInput[]
  upsert?: Prisma.ProcessUpsertWithWhereUniqueWithoutCreatorInput | Prisma.ProcessUpsertWithWhereUniqueWithoutCreatorInput[]
  createMany?: Prisma.ProcessCreateManyCreatorInputEnvelope
  set?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  disconnect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  delete?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  update?: Prisma.ProcessUpdateWithWhereUniqueWithoutCreatorInput | Prisma.ProcessUpdateWithWhereUniqueWithoutCreatorInput[]
  updateMany?: Prisma.ProcessUpdateManyWithWhereWithoutCreatorInput | Prisma.ProcessUpdateManyWithWhereWithoutCreatorInput[]
  deleteMany?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
}

export type ProcessCreateNestedManyWithoutGroupInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput> | Prisma.ProcessCreateWithoutGroupInput[] | Prisma.ProcessUncheckedCreateWithoutGroupInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutGroupInput | Prisma.ProcessCreateOrConnectWithoutGroupInput[]
  createMany?: Prisma.ProcessCreateManyGroupInputEnvelope
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
}

export type ProcessUncheckedCreateNestedManyWithoutGroupInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput> | Prisma.ProcessCreateWithoutGroupInput[] | Prisma.ProcessUncheckedCreateWithoutGroupInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutGroupInput | Prisma.ProcessCreateOrConnectWithoutGroupInput[]
  createMany?: Prisma.ProcessCreateManyGroupInputEnvelope
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
}

export type ProcessUpdateManyWithoutGroupNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput> | Prisma.ProcessCreateWithoutGroupInput[] | Prisma.ProcessUncheckedCreateWithoutGroupInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutGroupInput | Prisma.ProcessCreateOrConnectWithoutGroupInput[]
  upsert?: Prisma.ProcessUpsertWithWhereUniqueWithoutGroupInput | Prisma.ProcessUpsertWithWhereUniqueWithoutGroupInput[]
  createMany?: Prisma.ProcessCreateManyGroupInputEnvelope
  set?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  disconnect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  delete?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  update?: Prisma.ProcessUpdateWithWhereUniqueWithoutGroupInput | Prisma.ProcessUpdateWithWhereUniqueWithoutGroupInput[]
  updateMany?: Prisma.ProcessUpdateManyWithWhereWithoutGroupInput | Prisma.ProcessUpdateManyWithWhereWithoutGroupInput[]
  deleteMany?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
}

export type ProcessUncheckedUpdateManyWithoutGroupNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput> | Prisma.ProcessCreateWithoutGroupInput[] | Prisma.ProcessUncheckedCreateWithoutGroupInput[]
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutGroupInput | Prisma.ProcessCreateOrConnectWithoutGroupInput[]
  upsert?: Prisma.ProcessUpsertWithWhereUniqueWithoutGroupInput | Prisma.ProcessUpsertWithWhereUniqueWithoutGroupInput[]
  createMany?: Prisma.ProcessCreateManyGroupInputEnvelope
  set?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  disconnect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  delete?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  connect?: Prisma.ProcessWhereUniqueInput | Prisma.ProcessWhereUniqueInput[]
  update?: Prisma.ProcessUpdateWithWhereUniqueWithoutGroupInput | Prisma.ProcessUpdateWithWhereUniqueWithoutGroupInput[]
  updateMany?: Prisma.ProcessUpdateManyWithWhereWithoutGroupInput | Prisma.ProcessUpdateManyWithWhereWithoutGroupInput[]
  deleteMany?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
}

export type EnumProcessTypeFieldUpdateOperationsInput = {
  set?: $Enums.ProcessType
}

export type EnumProcessStatusFieldUpdateOperationsInput = {
  set?: $Enums.ProcessStatus
}

export type ProcessCreateNestedOneWithoutRolesInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutRolesInput, Prisma.ProcessUncheckedCreateWithoutRolesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutRolesInput
  connect?: Prisma.ProcessWhereUniqueInput
}

export type ProcessUpdateOneRequiredWithoutRolesNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutRolesInput, Prisma.ProcessUncheckedCreateWithoutRolesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutRolesInput
  upsert?: Prisma.ProcessUpsertWithoutRolesInput
  connect?: Prisma.ProcessWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProcessUpdateToOneWithWhereWithoutRolesInput, Prisma.ProcessUpdateWithoutRolesInput>, Prisma.ProcessUncheckedUpdateWithoutRolesInput>
}

export type ProcessCreateNestedOneWithoutFormResponsesInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutFormResponsesInput, Prisma.ProcessUncheckedCreateWithoutFormResponsesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutFormResponsesInput
  connect?: Prisma.ProcessWhereUniqueInput
}

export type ProcessUpdateOneRequiredWithoutFormResponsesNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutFormResponsesInput, Prisma.ProcessUncheckedCreateWithoutFormResponsesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutFormResponsesInput
  upsert?: Prisma.ProcessUpsertWithoutFormResponsesInput
  connect?: Prisma.ProcessWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProcessUpdateToOneWithWhereWithoutFormResponsesInput, Prisma.ProcessUpdateWithoutFormResponsesInput>, Prisma.ProcessUncheckedUpdateWithoutFormResponsesInput>
}

export type ProcessCreateNestedOneWithoutFormsInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutFormsInput, Prisma.ProcessUncheckedCreateWithoutFormsInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutFormsInput
  connect?: Prisma.ProcessWhereUniqueInput
}

export type ProcessUpdateOneRequiredWithoutFormsNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutFormsInput, Prisma.ProcessUncheckedCreateWithoutFormsInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutFormsInput
  upsert?: Prisma.ProcessUpsertWithoutFormsInput
  connect?: Prisma.ProcessWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProcessUpdateToOneWithWhereWithoutFormsInput, Prisma.ProcessUpdateWithoutFormsInput>, Prisma.ProcessUncheckedUpdateWithoutFormsInput>
}

export type ProcessCreateNestedOneWithoutApplicantProcessesInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedCreateWithoutApplicantProcessesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutApplicantProcessesInput
  connect?: Prisma.ProcessWhereUniqueInput
}

export type ProcessUpdateOneRequiredWithoutApplicantProcessesNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedCreateWithoutApplicantProcessesInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutApplicantProcessesInput
  upsert?: Prisma.ProcessUpsertWithoutApplicantProcessesInput
  connect?: Prisma.ProcessWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProcessUpdateToOneWithWhereWithoutApplicantProcessesInput, Prisma.ProcessUpdateWithoutApplicantProcessesInput>, Prisma.ProcessUncheckedUpdateWithoutApplicantProcessesInput>
}

export type ProcessCreateNestedOneWithoutProcessedApplicationsInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedCreateWithoutProcessedApplicationsInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutProcessedApplicationsInput
  connect?: Prisma.ProcessWhereUniqueInput
}

export type ProcessUpdateOneRequiredWithoutProcessedApplicationsNestedInput = {
  create?: Prisma.XOR<Prisma.ProcessCreateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedCreateWithoutProcessedApplicationsInput>
  connectOrCreate?: Prisma.ProcessCreateOrConnectWithoutProcessedApplicationsInput
  upsert?: Prisma.ProcessUpsertWithoutProcessedApplicationsInput
  connect?: Prisma.ProcessWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProcessUpdateToOneWithWhereWithoutProcessedApplicationsInput, Prisma.ProcessUpdateWithoutProcessedApplicationsInput>, Prisma.ProcessUncheckedUpdateWithoutProcessedApplicationsInput>
}

export type ProcessCreateWithoutCreatorInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutCreatorInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutCreatorInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput>
}

export type ProcessCreateManyCreatorInputEnvelope = {
  data: Prisma.ProcessCreateManyCreatorInput | Prisma.ProcessCreateManyCreatorInput[]
  skipDuplicates?: boolean
}

export type ProcessUpsertWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.ProcessWhereUniqueInput
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutCreatorInput, Prisma.ProcessUncheckedUpdateWithoutCreatorInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutCreatorInput, Prisma.ProcessUncheckedCreateWithoutCreatorInput>
}

export type ProcessUpdateWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.ProcessWhereUniqueInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutCreatorInput, Prisma.ProcessUncheckedUpdateWithoutCreatorInput>
}

export type ProcessUpdateManyWithWhereWithoutCreatorInput = {
  where: Prisma.ProcessScalarWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateManyMutationInput, Prisma.ProcessUncheckedUpdateManyWithoutCreatorInput>
}

export type ProcessScalarWhereInput = {
  AND?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
  OR?: Prisma.ProcessScalarWhereInput[]
  NOT?: Prisma.ProcessScalarWhereInput | Prisma.ProcessScalarWhereInput[]
  id?: Prisma.UuidFilter<"Process"> | string
  name?: Prisma.StringFilter<"Process"> | string
  type?: Prisma.EnumProcessTypeFilter<"Process"> | $Enums.ProcessType
  groupId?: Prisma.UuidFilter<"Process"> | string
  creatorId?: Prisma.UuidFilter<"Process"> | string
  status?: Prisma.EnumProcessStatusFilter<"Process"> | $Enums.ProcessStatus
  archived?: Prisma.BoolFilter<"Process"> | boolean
  staffViewForms?: Prisma.BoolFilter<"Process"> | boolean
  applicantViewProcessLevel?: Prisma.BoolFilter<"Process"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Process"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Process"> | Date | string
}

export type ProcessCreateWithoutGroupInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
}

export type ProcessUncheckedCreateWithoutGroupInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutGroupInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput>
}

export type ProcessCreateManyGroupInputEnvelope = {
  data: Prisma.ProcessCreateManyGroupInput | Prisma.ProcessCreateManyGroupInput[]
  skipDuplicates?: boolean
}

export type ProcessUpsertWithWhereUniqueWithoutGroupInput = {
  where: Prisma.ProcessWhereUniqueInput
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutGroupInput, Prisma.ProcessUncheckedUpdateWithoutGroupInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutGroupInput, Prisma.ProcessUncheckedCreateWithoutGroupInput>
}

export type ProcessUpdateWithWhereUniqueWithoutGroupInput = {
  where: Prisma.ProcessWhereUniqueInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutGroupInput, Prisma.ProcessUncheckedUpdateWithoutGroupInput>
}

export type ProcessUpdateManyWithWhereWithoutGroupInput = {
  where: Prisma.ProcessScalarWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateManyMutationInput, Prisma.ProcessUncheckedUpdateManyWithoutGroupInput>
}

export type ProcessCreateWithoutRolesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutRolesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutRolesInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutRolesInput, Prisma.ProcessUncheckedCreateWithoutRolesInput>
}

export type ProcessUpsertWithoutRolesInput = {
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutRolesInput, Prisma.ProcessUncheckedUpdateWithoutRolesInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutRolesInput, Prisma.ProcessUncheckedCreateWithoutRolesInput>
  where?: Prisma.ProcessWhereInput
}

export type ProcessUpdateToOneWithWhereWithoutRolesInput = {
  where?: Prisma.ProcessWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutRolesInput, Prisma.ProcessUncheckedUpdateWithoutRolesInput>
}

export type ProcessUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateWithoutFormResponsesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutFormResponsesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutFormResponsesInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutFormResponsesInput, Prisma.ProcessUncheckedCreateWithoutFormResponsesInput>
}

export type ProcessUpsertWithoutFormResponsesInput = {
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutFormResponsesInput, Prisma.ProcessUncheckedUpdateWithoutFormResponsesInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutFormResponsesInput, Prisma.ProcessUncheckedCreateWithoutFormResponsesInput>
  where?: Prisma.ProcessWhereInput
}

export type ProcessUpdateToOneWithWhereWithoutFormResponsesInput = {
  where?: Prisma.ProcessWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutFormResponsesInput, Prisma.ProcessUncheckedUpdateWithoutFormResponsesInput>
}

export type ProcessUpdateWithoutFormResponsesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutFormResponsesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateWithoutFormsInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutFormsInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutFormsInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutFormsInput, Prisma.ProcessUncheckedCreateWithoutFormsInput>
}

export type ProcessUpsertWithoutFormsInput = {
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutFormsInput, Prisma.ProcessUncheckedUpdateWithoutFormsInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutFormsInput, Prisma.ProcessUncheckedCreateWithoutFormsInput>
  where?: Prisma.ProcessWhereInput
}

export type ProcessUpdateToOneWithWhereWithoutFormsInput = {
  where?: Prisma.ProcessWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutFormsInput, Prisma.ProcessUncheckedUpdateWithoutFormsInput>
}

export type ProcessUpdateWithoutFormsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutFormsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateWithoutApplicantProcessesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutApplicantProcessesInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutApplicantProcessesInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedCreateWithoutApplicantProcessesInput>
}

export type ProcessUpsertWithoutApplicantProcessesInput = {
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedUpdateWithoutApplicantProcessesInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedCreateWithoutApplicantProcessesInput>
  where?: Prisma.ProcessWhereInput
}

export type ProcessUpdateToOneWithWhereWithoutApplicantProcessesInput = {
  where?: Prisma.ProcessWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutApplicantProcessesInput, Prisma.ProcessUncheckedUpdateWithoutApplicantProcessesInput>
}

export type ProcessUpdateWithoutApplicantProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutApplicantProcessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateWithoutProcessedApplicationsInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleCreateNestedManyWithoutProcessInput
  creator: Prisma.UserCreateNestedOneWithoutCreatedProcessesInput
  group: Prisma.GroupCreateNestedOneWithoutProcessesInput
}

export type ProcessUncheckedCreateWithoutProcessedApplicationsInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedCreateNestedManyWithoutProcessInput
  formResponses?: Prisma.FormResponseUncheckedCreateNestedManyWithoutProcessInput
  forms?: Prisma.ProcessFormUncheckedCreateNestedManyWithoutProcessInput
  roles?: Prisma.ProcessRoleUncheckedCreateNestedManyWithoutProcessInput
}

export type ProcessCreateOrConnectWithoutProcessedApplicationsInput = {
  where: Prisma.ProcessWhereUniqueInput
  create: Prisma.XOR<Prisma.ProcessCreateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedCreateWithoutProcessedApplicationsInput>
}

export type ProcessUpsertWithoutProcessedApplicationsInput = {
  update: Prisma.XOR<Prisma.ProcessUpdateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedUpdateWithoutProcessedApplicationsInput>
  create: Prisma.XOR<Prisma.ProcessCreateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedCreateWithoutProcessedApplicationsInput>
  where?: Prisma.ProcessWhereInput
}

export type ProcessUpdateToOneWithWhereWithoutProcessedApplicationsInput = {
  where?: Prisma.ProcessWhereInput
  data: Prisma.XOR<Prisma.ProcessUpdateWithoutProcessedApplicationsInput, Prisma.ProcessUncheckedUpdateWithoutProcessedApplicationsInput>
}

export type ProcessUpdateWithoutProcessedApplicationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutProcessedApplicationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessCreateManyCreatorInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  groupId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProcessUpdateWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  group?: Prisma.GroupUpdateOneRequiredWithoutProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessUncheckedUpdateManyWithoutCreatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  groupId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProcessCreateManyGroupInput = {
  id?: string
  name: string
  type?: $Enums.ProcessType
  creatorId: string
  status?: $Enums.ProcessStatus
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProcessUpdateWithoutGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUpdateManyWithoutProcessNestedInput
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedProcessesNestedInput
}

export type ProcessUncheckedUpdateWithoutGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  applicantProcesses?: Prisma.ApplicantProcessUncheckedUpdateManyWithoutProcessNestedInput
  formResponses?: Prisma.FormResponseUncheckedUpdateManyWithoutProcessNestedInput
  forms?: Prisma.ProcessFormUncheckedUpdateManyWithoutProcessNestedInput
  processedApplications?: Prisma.ProcessedApplicationUncheckedUpdateManyWithoutProcessNestedInput
  roles?: Prisma.ProcessRoleUncheckedUpdateManyWithoutProcessNestedInput
}

export type ProcessUncheckedUpdateManyWithoutGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumProcessTypeFieldUpdateOperationsInput | $Enums.ProcessType
  creatorId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumProcessStatusFieldUpdateOperationsInput | $Enums.ProcessStatus
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  staffViewForms?: Prisma.BoolFieldUpdateOperationsInput | boolean
  applicantViewProcessLevel?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ProcessCountOutputType
 */

export type ProcessCountOutputType = {
  applicantProcesses: number
  formResponses: number
  forms: number
  processedApplications: number
  roles: number
}

export type ProcessCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcesses?: boolean | ProcessCountOutputTypeCountApplicantProcessesArgs
  formResponses?: boolean | ProcessCountOutputTypeCountFormResponsesArgs
  forms?: boolean | ProcessCountOutputTypeCountFormsArgs
  processedApplications?: boolean | ProcessCountOutputTypeCountProcessedApplicationsArgs
  roles?: boolean | ProcessCountOutputTypeCountRolesArgs
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProcessCountOutputType
   */
  select?: Prisma.ProcessCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeCountApplicantProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ApplicantProcessWhereInput
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeCountFormResponsesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FormResponseWhereInput
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeCountFormsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessFormWhereInput
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeCountProcessedApplicationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessedApplicationWhereInput
}

/**
 * ProcessCountOutputType without action
 */
export type ProcessCountOutputTypeCountRolesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProcessRoleWhereInput
}


export type ProcessSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  type?: boolean
  groupId?: boolean
  creatorId?: boolean
  status?: boolean
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  applicantProcesses?: boolean | Prisma.Process$applicantProcessesArgs<ExtArgs>
  formResponses?: boolean | Prisma.Process$formResponsesArgs<ExtArgs>
  forms?: boolean | Prisma.Process$formsArgs<ExtArgs>
  processedApplications?: boolean | Prisma.Process$processedApplicationsArgs<ExtArgs>
  roles?: boolean | Prisma.Process$rolesArgs<ExtArgs>
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ProcessCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["process"]>

export type ProcessSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  type?: boolean
  groupId?: boolean
  creatorId?: boolean
  status?: boolean
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
}, ExtArgs["result"]["process"]>

export type ProcessSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  type?: boolean
  groupId?: boolean
  creatorId?: boolean
  status?: boolean
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
}, ExtArgs["result"]["process"]>

export type ProcessSelectScalar = {
  id?: boolean
  name?: boolean
  type?: boolean
  groupId?: boolean
  creatorId?: boolean
  status?: boolean
  archived?: boolean
  staffViewForms?: boolean
  applicantViewProcessLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProcessOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "type" | "groupId" | "creatorId" | "status" | "archived" | "staffViewForms" | "applicantViewProcessLevel" | "createdAt" | "updatedAt", ExtArgs["result"]["process"]>
export type ProcessInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  applicantProcesses?: boolean | Prisma.Process$applicantProcessesArgs<ExtArgs>
  formResponses?: boolean | Prisma.Process$formResponsesArgs<ExtArgs>
  forms?: boolean | Prisma.Process$formsArgs<ExtArgs>
  processedApplications?: boolean | Prisma.Process$processedApplicationsArgs<ExtArgs>
  roles?: boolean | Prisma.Process$rolesArgs<ExtArgs>
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ProcessCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProcessIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
}
export type ProcessIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  group?: boolean | Prisma.GroupDefaultArgs<ExtArgs>
}

export type $ProcessPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Process"
  objects: {
    applicantProcesses: Prisma.$ApplicantProcessPayload<ExtArgs>[]
    formResponses: Prisma.$FormResponsePayload<ExtArgs>[]
    forms: Prisma.$ProcessFormPayload<ExtArgs>[]
    processedApplications: Prisma.$ProcessedApplicationPayload<ExtArgs>[]
    roles: Prisma.$ProcessRolePayload<ExtArgs>[]
    creator: Prisma.$UserPayload<ExtArgs>
    group: Prisma.$GroupPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    type: $Enums.ProcessType
    groupId: string
    creatorId: string
    status: $Enums.ProcessStatus
    archived: boolean
    staffViewForms: boolean
    applicantViewProcessLevel: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["process"]>
  composites: {}
}

export type ProcessGetPayload<S extends boolean | null | undefined | ProcessDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProcessPayload, S>

export type ProcessCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProcessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: ProcessCountAggregateInputType | true
  }

export interface ProcessDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Process'], meta: { name: 'Process' } }
  /**
   * Find zero or one Process that matches the filter.
   * @param {ProcessFindUniqueArgs} args - Arguments to find a Process
   * @example
   * // Get one Process
   * const process = await prisma.process.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProcessFindUniqueArgs>(args: Prisma.SelectSubset<T, ProcessFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Process that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProcessFindUniqueOrThrowArgs} args - Arguments to find a Process
   * @example
   * // Get one Process
   * const process = await prisma.process.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProcessFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProcessFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Process that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessFindFirstArgs} args - Arguments to find a Process
   * @example
   * // Get one Process
   * const process = await prisma.process.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProcessFindFirstArgs>(args?: Prisma.SelectSubset<T, ProcessFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Process that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessFindFirstOrThrowArgs} args - Arguments to find a Process
   * @example
   * // Get one Process
   * const process = await prisma.process.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProcessFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProcessFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Processes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Processes
   * const processes = await prisma.process.findMany()
   * 
   * // Get first 10 Processes
   * const processes = await prisma.process.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const processWithIdOnly = await prisma.process.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProcessFindManyArgs>(args?: Prisma.SelectSubset<T, ProcessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Process.
   * @param {ProcessCreateArgs} args - Arguments to create a Process.
   * @example
   * // Create one Process
   * const Process = await prisma.process.create({
   *   data: {
   *     // ... data to create a Process
   *   }
   * })
   * 
   */
  create<T extends ProcessCreateArgs>(args: Prisma.SelectSubset<T, ProcessCreateArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Processes.
   * @param {ProcessCreateManyArgs} args - Arguments to create many Processes.
   * @example
   * // Create many Processes
   * const process = await prisma.process.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProcessCreateManyArgs>(args?: Prisma.SelectSubset<T, ProcessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Processes and returns the data saved in the database.
   * @param {ProcessCreateManyAndReturnArgs} args - Arguments to create many Processes.
   * @example
   * // Create many Processes
   * const process = await prisma.process.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Processes and only return the `id`
   * const processWithIdOnly = await prisma.process.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProcessCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProcessCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Process.
   * @param {ProcessDeleteArgs} args - Arguments to delete one Process.
   * @example
   * // Delete one Process
   * const Process = await prisma.process.delete({
   *   where: {
   *     // ... filter to delete one Process
   *   }
   * })
   * 
   */
  delete<T extends ProcessDeleteArgs>(args: Prisma.SelectSubset<T, ProcessDeleteArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Process.
   * @param {ProcessUpdateArgs} args - Arguments to update one Process.
   * @example
   * // Update one Process
   * const process = await prisma.process.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProcessUpdateArgs>(args: Prisma.SelectSubset<T, ProcessUpdateArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Processes.
   * @param {ProcessDeleteManyArgs} args - Arguments to filter Processes to delete.
   * @example
   * // Delete a few Processes
   * const { count } = await prisma.process.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProcessDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProcessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Processes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Processes
   * const process = await prisma.process.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProcessUpdateManyArgs>(args: Prisma.SelectSubset<T, ProcessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Processes and returns the data updated in the database.
   * @param {ProcessUpdateManyAndReturnArgs} args - Arguments to update many Processes.
   * @example
   * // Update many Processes
   * const process = await prisma.process.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Processes and only return the `id`
   * const processWithIdOnly = await prisma.process.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProcessUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProcessUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Process.
   * @param {ProcessUpsertArgs} args - Arguments to update or create a Process.
   * @example
   * // Update or create a Process
   * const process = await prisma.process.upsert({
   *   create: {
   *     // ... data to create a Process
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Process we want to update
   *   }
   * })
   */
  upsert<T extends ProcessUpsertArgs>(args: Prisma.SelectSubset<T, ProcessUpsertArgs<ExtArgs>>): Prisma.Prisma__ProcessClient<runtime.Types.Result.GetResult<Prisma.$ProcessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Processes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessCountArgs} args - Arguments to filter Processes to count.
   * @example
   * // Count the number of Processes
   * const count = await prisma.process.count({
   *   where: {
   *     // ... the filter for the Processes we want to count
   *   }
   * })
  **/
  count<T extends ProcessCountArgs>(
    args?: Prisma.Subset<T, ProcessCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProcessCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Process.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProcessAggregateArgs>(args: Prisma.Subset<T, ProcessAggregateArgs>): Prisma.PrismaPromise<GetProcessAggregateType<T>>

  /**
   * Group by Process.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProcessGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProcessGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProcessGroupByArgs['orderBy'] }
      : { orderBy?: ProcessGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProcessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProcessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Process model
 */
readonly fields: ProcessFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Process.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProcessClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  applicantProcesses<T extends Prisma.Process$applicantProcessesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Process$applicantProcessesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ApplicantProcessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  formResponses<T extends Prisma.Process$formResponsesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Process$formResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FormResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  forms<T extends Prisma.Process$formsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Process$formsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessFormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  processedApplications<T extends Prisma.Process$processedApplicationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Process$processedApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessedApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  roles<T extends Prisma.Process$rolesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Process$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProcessRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  creator<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  group<T extends Prisma.GroupDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.GroupDefaultArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Process model
 */
export interface ProcessFieldRefs {
  readonly id: Prisma.FieldRef<"Process", 'String'>
  readonly name: Prisma.FieldRef<"Process", 'String'>
  readonly type: Prisma.FieldRef<"Process", 'ProcessType'>
  readonly groupId: Prisma.FieldRef<"Process", 'String'>
  readonly creatorId: Prisma.FieldRef<"Process", 'String'>
  readonly status: Prisma.FieldRef<"Process", 'ProcessStatus'>
  readonly archived: Prisma.FieldRef<"Process", 'Boolean'>
  readonly staffViewForms: Prisma.FieldRef<"Process", 'Boolean'>
  readonly applicantViewProcessLevel: Prisma.FieldRef<"Process", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Process", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Process", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Process findUnique
 */
export type ProcessFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter, which Process to fetch.
   */
  where: Prisma.ProcessWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process findUniqueOrThrow
 */
export type ProcessFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter, which Process to fetch.
   */
  where: Prisma.ProcessWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process findFirst
 */
export type ProcessFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter, which Process to fetch.
   */
  where?: Prisma.ProcessWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Processes to fetch.
   */
  orderBy?: Prisma.ProcessOrderByWithRelationInput | Prisma.ProcessOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Processes.
   */
  cursor?: Prisma.ProcessWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Processes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Processes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Processes.
   */
  distinct?: Prisma.ProcessScalarFieldEnum | Prisma.ProcessScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process findFirstOrThrow
 */
export type ProcessFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter, which Process to fetch.
   */
  where?: Prisma.ProcessWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Processes to fetch.
   */
  orderBy?: Prisma.ProcessOrderByWithRelationInput | Prisma.ProcessOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Processes.
   */
  cursor?: Prisma.ProcessWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Processes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Processes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Processes.
   */
  distinct?: Prisma.ProcessScalarFieldEnum | Prisma.ProcessScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process findMany
 */
export type ProcessFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter, which Processes to fetch.
   */
  where?: Prisma.ProcessWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Processes to fetch.
   */
  orderBy?: Prisma.ProcessOrderByWithRelationInput | Prisma.ProcessOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Processes.
   */
  cursor?: Prisma.ProcessWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Processes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Processes.
   */
  skip?: number
  distinct?: Prisma.ProcessScalarFieldEnum | Prisma.ProcessScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process create
 */
export type ProcessCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * The data needed to create a Process.
   */
  data: Prisma.XOR<Prisma.ProcessCreateInput, Prisma.ProcessUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process createMany
 */
export type ProcessCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Processes.
   */
  data: Prisma.ProcessCreateManyInput | Prisma.ProcessCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Process createManyAndReturn
 */
export type ProcessCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * The data used to create many Processes.
   */
  data: Prisma.ProcessCreateManyInput | Prisma.ProcessCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Process update
 */
export type ProcessUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * The data needed to update a Process.
   */
  data: Prisma.XOR<Prisma.ProcessUpdateInput, Prisma.ProcessUncheckedUpdateInput>
  /**
   * Choose, which Process to update.
   */
  where: Prisma.ProcessWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process updateMany
 */
export type ProcessUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Processes.
   */
  data: Prisma.XOR<Prisma.ProcessUpdateManyMutationInput, Prisma.ProcessUncheckedUpdateManyInput>
  /**
   * Filter which Processes to update
   */
  where?: Prisma.ProcessWhereInput
  /**
   * Limit how many Processes to update.
   */
  limit?: number
}

/**
 * Process updateManyAndReturn
 */
export type ProcessUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * The data used to update Processes.
   */
  data: Prisma.XOR<Prisma.ProcessUpdateManyMutationInput, Prisma.ProcessUncheckedUpdateManyInput>
  /**
   * Filter which Processes to update
   */
  where?: Prisma.ProcessWhereInput
  /**
   * Limit how many Processes to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Process upsert
 */
export type ProcessUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * The filter to search for the Process to update in case it exists.
   */
  where: Prisma.ProcessWhereUniqueInput
  /**
   * In case the Process found by the `where` argument doesn't exist, create a new Process with this data.
   */
  create: Prisma.XOR<Prisma.ProcessCreateInput, Prisma.ProcessUncheckedCreateInput>
  /**
   * In case the Process was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProcessUpdateInput, Prisma.ProcessUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process delete
 */
export type ProcessDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
  /**
   * Filter which Process to delete.
   */
  where: Prisma.ProcessWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * Process deleteMany
 */
export type ProcessDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Processes to delete
   */
  where?: Prisma.ProcessWhereInput
  /**
   * Limit how many Processes to delete.
   */
  limit?: number
}

/**
 * Process.applicantProcesses
 */
export type Process$applicantProcessesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ApplicantProcess
   */
  select?: Prisma.ApplicantProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ApplicantProcess
   */
  omit?: Prisma.ApplicantProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApplicantProcessInclude<ExtArgs> | null
  where?: Prisma.ApplicantProcessWhereInput
  orderBy?: Prisma.ApplicantProcessOrderByWithRelationInput | Prisma.ApplicantProcessOrderByWithRelationInput[]
  cursor?: Prisma.ApplicantProcessWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ApplicantProcessScalarFieldEnum | Prisma.ApplicantProcessScalarFieldEnum[]
}

/**
 * Process.formResponses
 */
export type Process$formResponsesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FormResponse
   */
  select?: Prisma.FormResponseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FormResponse
   */
  omit?: Prisma.FormResponseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormResponseInclude<ExtArgs> | null
  where?: Prisma.FormResponseWhereInput
  orderBy?: Prisma.FormResponseOrderByWithRelationInput | Prisma.FormResponseOrderByWithRelationInput[]
  cursor?: Prisma.FormResponseWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FormResponseScalarFieldEnum | Prisma.FormResponseScalarFieldEnum[]
}

/**
 * Process.forms
 */
export type Process$formsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProcessForm
   */
  select?: Prisma.ProcessFormSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProcessForm
   */
  omit?: Prisma.ProcessFormOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessFormInclude<ExtArgs> | null
  where?: Prisma.ProcessFormWhereInput
  orderBy?: Prisma.ProcessFormOrderByWithRelationInput | Prisma.ProcessFormOrderByWithRelationInput[]
  cursor?: Prisma.ProcessFormWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProcessFormScalarFieldEnum | Prisma.ProcessFormScalarFieldEnum[]
}

/**
 * Process.processedApplications
 */
export type Process$processedApplicationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProcessedApplication
   */
  select?: Prisma.ProcessedApplicationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProcessedApplication
   */
  omit?: Prisma.ProcessedApplicationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessedApplicationInclude<ExtArgs> | null
  where?: Prisma.ProcessedApplicationWhereInput
  orderBy?: Prisma.ProcessedApplicationOrderByWithRelationInput | Prisma.ProcessedApplicationOrderByWithRelationInput[]
  cursor?: Prisma.ProcessedApplicationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProcessedApplicationScalarFieldEnum | Prisma.ProcessedApplicationScalarFieldEnum[]
}

/**
 * Process.roles
 */
export type Process$rolesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProcessRole
   */
  select?: Prisma.ProcessRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProcessRole
   */
  omit?: Prisma.ProcessRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessRoleInclude<ExtArgs> | null
  where?: Prisma.ProcessRoleWhereInput
  orderBy?: Prisma.ProcessRoleOrderByWithRelationInput | Prisma.ProcessRoleOrderByWithRelationInput[]
  cursor?: Prisma.ProcessRoleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProcessRoleScalarFieldEnum | Prisma.ProcessRoleScalarFieldEnum[]
}

/**
 * Process without action
 */
export type ProcessDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Process
   */
  select?: Prisma.ProcessSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Process
   */
  omit?: Prisma.ProcessOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProcessInclude<ExtArgs> | null
}
